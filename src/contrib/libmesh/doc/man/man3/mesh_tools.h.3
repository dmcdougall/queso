.TH "mesh_tools.h" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
mesh_tools.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBlibMesh::LocationMap< T >\fP"
.br
.ti -1c
.RI "class \fBlibMesh::MeshTools::BoundingBox\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "\fBlibMesh\fP"
.br
.ti -1c
.RI "\fBlibMesh::MeshTools\fP"
.br
.ti -1c
.RI "\fBlibMesh::MeshTools::Private\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::total_weight\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::weight\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBprocessor_id_type\fP pid)"
.br
.ti -1c
.RI "dof_id_type \fBlibMesh::MeshTools::weight\fP (const MeshBase &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::build_nodes_to_elem_map\fP (const \fBMeshBase\fP &\fBmesh\fP, std::vector< std::vector< \fBdof_id_type\fP > > &nodes_to_elem_map)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::build_nodes_to_elem_map\fP (const \fBMeshBase\fP &\fBmesh\fP, std::vector< std::vector< const \fBElem\fP * > > &nodes_to_elem_map)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::find_boundary_nodes\fP (const \fBMeshBase\fP &\fBmesh\fP, std::vector< bool > &on_boundary)"
.br
.ti -1c
.RI "BoundingBox \fBlibMesh::MeshTools::bounding_box\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "\fBSphere\fP \fBlibMesh::MeshTools::bounding_sphere\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "BoundingBox \fBlibMesh::MeshTools::processor_bounding_box\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBprocessor_id_type\fP pid)"
.br
.ti -1c
.RI "\fBSphere\fP \fBlibMesh::MeshTools::processor_bounding_sphere\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBprocessor_id_type\fP pid)"
.br
.ti -1c
.RI "BoundingBox \fBlibMesh::MeshTools::subdomain_bounding_box\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBsubdomain_id_type\fP sid)"
.br
.ti -1c
.RI "\fBSphere\fP \fBlibMesh::MeshTools::subdomain_bounding_sphere\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBsubdomain_id_type\fP sid)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::elem_types\fP (const \fBMeshBase\fP &\fBmesh\fP, std::vector< \fBElemType\fP > &et)"
.br
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::n_elem_of_type\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBElemType\fP type)"
.br
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::n_active_elem_of_type\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBElemType\fP type)"
.br
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::n_non_subactive_elem_of_type_at_level\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBElemType\fP type, const unsigned int level)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::MeshTools::n_levels\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::MeshTools::n_local_levels\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::MeshTools::n_active_levels\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::MeshTools::n_active_local_levels\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::MeshTools::n_p_levels\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::get_not_subactive_node_ids\fP (const \fBMeshBase\fP &\fBmesh\fP, std::set< \fBdof_id_type\fP > &not_subactive_node_ids)"
.br
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::n_elem\fP (const \fBMeshBase::const_element_iterator\fP &begin, const \fBMeshBase::const_element_iterator\fP &\fBend\fP)"
.br
.ti -1c
.RI "\fBdof_id_type\fP \fBlibMesh::MeshTools::n_nodes\fP (const \fBMeshBase::const_node_iterator\fP &begin, const \fBMeshBase::const_node_iterator\fP &\fBend\fP)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::MeshTools::max_level\fP (const MeshBase &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::find_nodal_neighbors\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBNode\fP &n, std::vector< std::vector< const \fBElem\fP * > > &nodes_to_elem_map, std::vector< const \fBNode\fP * > &neighbors)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::find_hanging_nodes_and_parents\fP (const \fBMeshBase\fP &\fBmesh\fP, std::map< \fBdof_id_type\fP, std::vector< \fBdof_id_type\fP > > &hanging_nodes)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::correct_node_proc_ids\fP (\fBMeshBase\fP &, \fBLocationMap\fP< \fBNode\fP > &)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_no_links_to_elem\fP (const \fBMeshBase\fP &\fBmesh\fP, const \fBElem\fP *bad_elem)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_equal_n_systems\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_old_dof_objects\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_node_pointers\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_remote_elems\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_elem_ids\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_amr_elem_ids\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_connected_nodes\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_dof_ids\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "template<typename DofObjectSubclass > void \fBlibMesh::MeshTools::libmesh_assert_valid_procids\fP (const MeshBase &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_refinement_flags\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_refinement_tree\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::libmesh_assert_valid_neighbors\fP (const \fBMeshBase\fP &\fBmesh\fP)"
.br
.ti -1c
.RI "void \fBlibMesh::MeshTools::Private::globally_renumber_nodes_and_elements\fP (\fBMeshBase\fP &)"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
