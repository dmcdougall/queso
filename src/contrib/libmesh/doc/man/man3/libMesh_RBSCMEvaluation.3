.TH "libMesh::RBSCMEvaluation" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::RBSCMEvaluation \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <rb_scm_evaluation\&.h>\fP
.PP
Inherits \fBlibMesh::RBParametrized\fP, and \fBlibMesh::ParallelObject\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRBSCMEvaluation\fP (const \fBParallel::Communicator\fP &\fBcomm\fP LIBMESH_CAN_DEFAULT_TO_COMMWORLD)"
.br
.ti -1c
.RI "virtual \fB~RBSCMEvaluation\fP ()"
.br
.ti -1c
.RI "void \fBset_rb_theta_expansion\fP (\fBRBThetaExpansion\fP &rb_theta_expansion_in)"
.br
.ti -1c
.RI "\fBRBThetaExpansion\fP & \fBget_rb_theta_expansion\fP ()"
.br
.ti -1c
.RI "virtual \fBReal\fP \fBget_SCM_LB\fP ()"
.br
.ti -1c
.RI "virtual \fBReal\fP \fBget_SCM_UB\fP ()"
.br
.ti -1c
.RI "\fBReal\fP \fBget_C_J_stability_constraint\fP (unsigned int j) const "
.br
.ti -1c
.RI "void \fBset_C_J_stability_constraint\fP (unsigned int j, \fBReal\fP stability_constraint_in)"
.br
.ti -1c
.RI "\fBReal\fP \fBget_SCM_UB_vector\fP (unsigned int j, unsigned int q)"
.br
.ti -1c
.RI "void \fBset_SCM_UB_vector\fP (unsigned int j, unsigned int q, \fBReal\fP y_q)"
.br
.ti -1c
.RI "unsigned int \fBget_C_J_size\fP ()"
.br
.ti -1c
.RI "const \fBRBParameters\fP & \fBget_C_J_entry\fP (unsigned int j)"
.br
.ti -1c
.RI "\fBReal\fP \fBget_C_J_stability_value\fP (unsigned int j)"
.br
.ti -1c
.RI "\fBReal\fP \fBget_B_min\fP (unsigned int i) const "
.br
.ti -1c
.RI "\fBReal\fP \fBget_B_max\fP (unsigned int i) const "
.br
.ti -1c
.RI "void \fBset_B_min\fP (unsigned int i, \fBReal\fP B_min_val)"
.br
.ti -1c
.RI "void \fBset_B_max\fP (unsigned int i, \fBReal\fP B_max_val)"
.br
.ti -1c
.RI "virtual void \fBsave_current_parameters\fP ()"
.br
.ti -1c
.RI "virtual void \fBreload_current_parameters\fP ()"
.br
.ti -1c
.RI "virtual void \fBset_current_parameters_from_C_J\fP (unsigned int C_J_index)"
.br
.ti -1c
.RI "virtual void \fBwrite_offline_data_to_files\fP (const std::string &directory_name='offline_data', const bool write_binary_data=true)"
.br
.ti -1c
.RI "virtual void \fBread_offline_data_from_files\fP (const std::string &directory_name='offline_data', const bool read_binary_data=true)"
.br
.ti -1c
.RI "virtual void \fBclear\fP ()"
.br
.ti -1c
.RI "void \fBinitialize_parameters\fP (const \fBRBParameters\fP &mu_min_in, const \fBRBParameters\fP &mu_max_in, const std::map< std::string, std::vector< \fBReal\fP > > &discrete_parameter_values)"
.br
.ti -1c
.RI "void \fBinitialize_parameters\fP (const \fBRBParametrized\fP &rb_parametrized)"
.br
.ti -1c
.RI "unsigned int \fBget_n_params\fP () const "
.br
.ti -1c
.RI "unsigned int \fBget_n_continuous_params\fP () const "
.br
.ti -1c
.RI "unsigned int \fBget_n_discrete_params\fP () const "
.br
.ti -1c
.RI "std::set< std::string > \fBget_parameter_names\fP () const "
.br
.ti -1c
.RI "const \fBRBParameters\fP & \fBget_parameters\fP () const "
.br
.ti -1c
.RI "void \fBset_parameters\fP (const \fBRBParameters\fP &params)"
.br
.ti -1c
.RI "const \fBRBParameters\fP & \fBget_parameters_min\fP () const "
.br
.ti -1c
.RI "const \fBRBParameters\fP & \fBget_parameters_max\fP () const "
.br
.ti -1c
.RI "\fBReal\fP \fBget_parameter_min\fP (const std::string &param_name) const "
.br
.ti -1c
.RI "\fBReal\fP \fBget_parameter_max\fP (const std::string &param_name) const "
.br
.ti -1c
.RI "void \fBprint_parameters\fP () const "
.br
.ti -1c
.RI "void \fBwrite_parameter_data_to_files\fP (const std::string &continuous_param_file_name, const std::string &discrete_param_file_name, const bool write_binary_data)"
.br
.ti -1c
.RI "void \fBread_parameter_data_from_files\fP (const std::string &continuous_param_file_name, const std::string &discrete_param_file_name, const bool read_binary_data)"
.br
.ti -1c
.RI "bool \fBis_discrete_parameter\fP (const std::string &mu_name) const "
.br
.ti -1c
.RI "const std::map< std::string, 
.br
std::vector< \fBReal\fP > > & \fBget_discrete_parameter_values\fP () const "
.br
.ti -1c
.RI "void \fBprint_discrete_parameter_values\fP () const "
.br
.ti -1c
.RI "const \fBParallel::Communicator\fP & \fBcomm\fP () const "
.br
.ti -1c
.RI "\fBprocessor_id_type\fP \fBn_processors\fP () const "
.br
.ti -1c
.RI "\fBprocessor_id_type\fP \fBprocessor_id\fP () const "
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBReal\fP \fBget_closest_value\fP (\fBReal\fP value, const std::vector< \fBReal\fP > &list_of_values)"
.br
.ti -1c
.RI "static std::string \fBget_info\fP ()"
.br
.ti -1c
.RI "static void \fBprint_info\fP (std::ostream &\fBout\fP=\fBlibMesh::out\fP)"
.br
.ti -1c
.RI "static unsigned int \fBn_objects\fP ()"
.br
.ti -1c
.RI "static void \fBenable_print_counter_info\fP ()"
.br
.ti -1c
.RI "static void \fBdisable_print_counter_info\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBReal\fP > \fBB_min\fP"
.br
.ti -1c
.RI "std::vector< \fBReal\fP > \fBB_max\fP"
.br
.ti -1c
.RI "std::vector< \fBRBParameters\fP > \fBC_J\fP"
.br
.ti -1c
.RI "std::vector< \fBReal\fP > \fBC_J_stability_vector\fP"
.br
.ti -1c
.RI "std::vector< std::vector< \fBReal\fP > > \fBSCM_UB_vectors\fP"
.br
.ti -1c
.RI "bool \fBverbose_mode\fP"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef std::map< std::string, 
.br
std::pair< unsigned int, 
.br
unsigned int > > \fBCounts\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBincrement_constructor_count\fP (const std::string &name)"
.br
.ti -1c
.RI "void \fBincrement_destructor_count\fP (const std::string &name)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "const \fBParallel::Communicator\fP & \fB_communicator\fP"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static \fBCounts\fP \fB_counts\fP"
.br
.ti -1c
.RI "static \fBThreads::atomic\fP
.br
< unsigned int > \fB_n_objects\fP"
.br
.ti -1c
.RI "static \fBThreads::spin_mutex\fP \fB_mutex\fP"
.br
.ti -1c
.RI "static bool \fB_enable_print_counter\fP = true"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBRBParameters\fP \fBsaved_parameters\fP"
.br
.ti -1c
.RI "\fBRBThetaExpansion\fP * \fBrb_theta_expansion\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is part of the rbOOmit framework\&.
.PP
\fBRBSCMEvaluation\fP encapsulates the functionality required to \fIevaluate\fP the Successive Constraint Method for associated with a reduced basis model\&.
.PP
\fBAuthor:\fP
.RS 4
David J\&. Knezevic, 2011 
.RE
.PP

.PP
Definition at line 49 of file rb_scm_evaluation\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::map<std::string, std::pair<unsigned int, unsigned int> > \fBlibMesh::ReferenceCounter::Counts\fP\fC [protected]\fP, \fC [inherited]\fP"
Data structure to log the information\&. The log is identified by the class name\&. 
.PP
Definition at line 113 of file reference_counter\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "libMesh::RBSCMEvaluation::RBSCMEvaluation (const \fBParallel::Communicator\fP &\fBcomm\fPLIBMESH_CAN_DEFAULT_TO_COMMWORLD)"
Constructor\&. 
.SS "virtual libMesh::RBSCMEvaluation::~RBSCMEvaluation ()\fC [virtual]\fP"
Destructor\&. 
.SH "Member Function Documentation"
.PP 
.SS "virtual void libMesh::RBParametrized::clear ()\fC [virtual]\fP, \fC [inherited]\fP"
Clear all the data structures associated with the system\&. 
.PP
Reimplemented in \fBlibMesh::RBConstruction\fP, \fBlibMesh::RBConstructionBase< Base >\fP, \fBlibMesh::RBConstructionBase< LinearImplicitSystem >\fP, \fBlibMesh::RBConstructionBase< CondensedEigenSystem >\fP, \fBlibMesh::RBSCMConstruction\fP, \fBlibMesh::RBEIMConstruction\fP, \fBlibMesh::TransientRBConstruction\fP, \fBlibMesh::TransientSystem< RBConstruction >\fP, \fBlibMesh::RBEIMEvaluation\fP, \fBlibMesh::TransientRBEvaluation\fP, and \fBlibMesh::RBEvaluation\fP\&.
.SS "const \fBParallel::Communicator\fP& libMesh::ParallelObject::comm () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
\fBReturns:\fP
.RS 4
a reference to the \fC\fBParallel::Communicator\fP\fP object used by this mesh\&. 
.RE
.PP

.PP
Definition at line 86 of file parallel_object\&.h\&.
.PP
References libMesh::ParallelObject::_communicator\&.
.PP
Referenced by libMesh::__libmesh_petsc_diff_solver_monitor(), libMesh::__libmesh_petsc_diff_solver_residual(), libMesh::__libmesh_petsc_snes_residual(), libMesh::MeshRefinement::_coarsen_elements(), libMesh::ExactSolution::_compute_error(), libMesh::MetisPartitioner::_do_partition(), libMesh::ParmetisPartitioner::_do_repartition(), libMesh::UniformRefinementEstimator::_estimate_error(), libMesh::SlepcEigenSolver< T >::_petsc_shell_matrix_get_diagonal(), libMesh::PetscLinearSolver< T >::_petsc_shell_matrix_get_diagonal(), libMesh::SlepcEigenSolver< T >::_petsc_shell_matrix_mult(), libMesh::PetscLinearSolver< T >::_petsc_shell_matrix_mult(), libMesh::PetscLinearSolver< T >::_petsc_shell_matrix_mult_add(), libMesh::EquationSystems::_read_impl(), libMesh::MeshRefinement::_refine_elements(), libMesh::ParallelMesh::add_elem(), libMesh::ImplicitSystem::add_matrix(), libMesh::ParallelMesh::add_node(), libMesh::System::add_vector(), libMesh::UnstructuredMesh::all_second_order(), libMesh::LaplaceMeshSmoother::allgather_graph(), libMesh::FEMSystem::assemble_qoi(), libMesh::MeshCommunication::assign_global_indices(), libMesh::ParmetisPartitioner::assign_partitioning(), libMesh::DofMap::attach_matrix(), libMesh::MeshTools::bounding_box(), libMesh::System::calculate_norm(), libMesh::MeshRefinement::coarsen_elements(), libMesh::Nemesis_IO_Helper::compute_num_global_elem_blocks(), libMesh::Nemesis_IO_Helper::compute_num_global_nodesets(), libMesh::Nemesis_IO_Helper::compute_num_global_sidesets(), libMesh::Problem_Interface::computeF(), libMesh::Problem_Interface::computeJacobian(), libMesh::Problem_Interface::computePreconditioner(), libMesh::MeshTools::correct_node_proc_ids(), libMesh::MeshCommunication::delete_remote_elements(), libMesh::DofMap::distribute_dofs(), DMlibMeshFunction(), DMLibMeshSetSystem(), DMVariableBounds_libMesh(), libMesh::MeshRefinement::eliminate_unrefined_patches(), libMesh::WeightedPatchRecoveryErrorEstimator::estimate_error(), libMesh::PatchRecoveryErrorEstimator::estimate_error(), libMesh::JumpErrorEstimator::estimate_error(), libMesh::AdjointRefinementEstimator::estimate_error(), libMesh::MeshRefinement::flag_elements_by_elem_fraction(), libMesh::MeshRefinement::flag_elements_by_error_fraction(), libMesh::MeshRefinement::flag_elements_by_nelem_target(), libMesh::for(), libMesh::CondensedEigenSystem::get_eigenpair(), libMesh::ImplicitSystem::get_linear_solver(), libMesh::LocationMap< T >::init(), libMesh::TimeSolver::init(), libMesh::SystemSubsetBySubdomain::init(), libMesh::EigenSystem::init_data(), libMesh::EigenSystem::init_matrices(), libMesh::ParmetisPartitioner::initialize(), libMesh::MeshTools::libmesh_assert_valid_dof_ids(), libMesh::ParallelMesh::libmesh_assert_valid_parallel_flags(), libMesh::MeshTools::libmesh_assert_valid_procids< Elem >(), libMesh::MeshTools::libmesh_assert_valid_procids< Node >(), libMesh::MeshTools::libmesh_assert_valid_refinement_flags(), libMesh::MeshRefinement::limit_level_mismatch_at_edge(), libMesh::MeshRefinement::limit_level_mismatch_at_node(), libMesh::MeshRefinement::make_coarsening_compatible(), libMesh::MeshCommunication::make_elems_parallel_consistent(), libMesh::MeshRefinement::make_flags_parallel_consistent(), libMesh::MeshCommunication::make_node_ids_parallel_consistent(), libMesh::MeshCommunication::make_node_proc_ids_parallel_consistent(), libMesh::MeshCommunication::make_nodes_parallel_consistent(), libMesh::MeshRefinement::make_refinement_compatible(), libMesh::FEMSystem::mesh_position_set(), libMesh::MeshSerializer::MeshSerializer(), libMesh::ParallelMesh::n_active_elem(), libMesh::MeshTools::n_active_levels(), libMesh::BoundaryInfo::n_boundary_conds(), libMesh::BoundaryInfo::n_edge_conds(), libMesh::CondensedEigenSystem::n_global_non_condensed_dofs(), libMesh::MeshTools::n_levels(), libMesh::BoundaryInfo::n_nodeset_conds(), libMesh::MeshTools::n_p_levels(), libMesh::ParallelMesh::parallel_max_elem_id(), libMesh::ParallelMesh::parallel_max_node_id(), libMesh::ParallelMesh::parallel_n_elem(), libMesh::ParallelMesh::parallel_n_nodes(), libMesh::Partitioner::partition(), libMesh::Partitioner::partition_unpartitioned_elements(), libMesh::petsc_auto_fieldsplit(), libMesh::System::point_gradient(), libMesh::System::point_hessian(), libMesh::System::point_value(), libMesh::MeshBase::prepare_for_use(), libMesh::System::project_vector(), libMesh::Nemesis_IO::read(), libMesh::XdrIO::read(), libMesh::System::read_header(), libMesh::System::read_legacy_data(), libMesh::System::read_SCALAR_dofs(), libMesh::XdrIO::read_serialized_bc_names(), libMesh::XdrIO::read_serialized_bcs(), libMesh::System::read_serialized_blocked_dof_objects(), libMesh::XdrIO::read_serialized_connectivity(), libMesh::XdrIO::read_serialized_nodes(), libMesh::XdrIO::read_serialized_nodesets(), libMesh::XdrIO::read_serialized_subdomain_names(), libMesh::System::read_serialized_vector(), libMesh::MeshBase::recalculate_n_partitions(), libMesh::MeshRefinement::refine_and_coarsen_elements(), libMesh::MeshRefinement::refine_elements(), libMesh::Partitioner::set_node_processor_ids(), libMesh::DofMap::set_nonlocal_dof_objects(), libMesh::LaplaceMeshSmoother::smooth(), libMesh::MeshBase::subdomain_ids(), libMesh::BoundaryInfo::sync(), libMesh::Parallel::sync_element_data_by_parent_id(), libMesh::MeshRefinement::test_level_one(), libMesh::MeshRefinement::test_unflagged(), libMesh::MeshTools::total_weight(), libMesh::CheckpointIO::write(), libMesh::XdrIO::write(), libMesh::UnstructuredMesh::write(), libMesh::LegacyXdrIO::write_mesh(), libMesh::System::write_SCALAR_dofs(), libMesh::XdrIO::write_serialized_bcs(), libMesh::System::write_serialized_blocked_dof_objects(), libMesh::XdrIO::write_serialized_connectivity(), libMesh::XdrIO::write_serialized_nodes(), libMesh::XdrIO::write_serialized_nodesets(), and libMesh::DivaIO::write_stream()\&.
.PP
.nf
87   { return _communicator; }
.fi
.SS "void libMesh::ReferenceCounter::disable_print_counter_info ()\fC [static]\fP, \fC [inherited]\fP"

.PP
Definition at line 106 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_enable_print_counter\&.
.PP
.nf
107 {
108   _enable_print_counter = false;
109   return;
110 }
.fi
.SS "void libMesh::ReferenceCounter::enable_print_counter_info ()\fC [static]\fP, \fC [inherited]\fP"
Methods to enable/disable the reference counter output from \fBprint_info()\fP 
.PP
Definition at line 100 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_enable_print_counter\&.
.PP
.nf
101 {
102   _enable_print_counter = true;
103   return;
104 }
.fi
.SS "\fBReal\fP libMesh::RBSCMEvaluation::get_B_max (unsigned inti) const"

.SS "\fBReal\fP libMesh::RBSCMEvaluation::get_B_min (unsigned inti) const"
Get B_min and B_max\&. 
.SS "const \fBRBParameters\fP& libMesh::RBSCMEvaluation::get_C_J_entry (unsigned intj)"
Get entry of C_J\&. 
.SS "unsigned int libMesh::RBSCMEvaluation::get_C_J_size ()\fC [inline]\fP"
Get size of the set C_J\&. 
.PP
Definition at line 118 of file rb_scm_evaluation\&.h\&.
.PP
References C_J\&.
.PP
.nf
119   { return libmesh_cast_int<unsigned int>(C_J\&.size()); }
.fi
.SS "\fBReal\fP libMesh::RBSCMEvaluation::get_C_J_stability_constraint (unsigned intj) const"
Get stability constraints (i\&.e\&. the values of coercivity/ inf-sup/stability constants at the parameter values chosen during the greedy); we store one constraint for each element of C_J\&. 
.SS "\fBReal\fP libMesh::RBSCMEvaluation::get_C_J_stability_value (unsigned intj)\fC [inline]\fP"
Get entry of C_J_stability_vector\&. 
.PP
Definition at line 129 of file rb_scm_evaluation\&.h\&.
.PP
References C_J_stability_vector\&.
.PP
.nf
129 { return C_J_stability_vector[j]; }
.fi
.SS "static \fBReal\fP libMesh::RBParametrized::get_closest_value (\fBReal\fPvalue, const std::vector< \fBReal\fP > &list_of_values)\fC [static]\fP, \fC [inherited]\fP"
Helper function that returns the closest entry to \fCvalue\fP from \fClist_of_values\fP\&. 
.SS "const std::map< std::string, std::vector<\fBReal\fP> >& libMesh::RBParametrized::get_discrete_parameter_values () const\fC [inherited]\fP"
Get a const reference to the discrete parameter values\&. 
.SS "std::string libMesh::ReferenceCounter::get_info ()\fC [static]\fP, \fC [inherited]\fP"
Gets a string containing the reference information\&. 
.PP
Definition at line 47 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_counts, and libMesh::Quality::name()\&.
.PP
Referenced by libMesh::ReferenceCounter::print_info()\&.
.PP
.nf
48 {
49 #if defined(LIBMESH_ENABLE_REFERENCE_COUNTING) && defined(DEBUG)
50 
51   std::ostringstream oss;
52 
53   oss << '\n'
54       << " ---------------------------------------------------------------------------- \n"
55       << "| Reference count information                                                |\n"
56       << " ---------------------------------------------------------------------------- \n";
57 
58   for (Counts::iterator it = _counts\&.begin();
59        it != _counts\&.end(); ++it)
60     {
61       const std::string name(it->first);
62       const unsigned int creations    = it->second\&.first;
63       const unsigned int destructions = it->second\&.second;
64 
65       oss << "| " << name << " reference count information:\n"
66           << "|  Creations:    " << creations    << '\n'
67           << "|  Destructions: " << destructions << '\n';
68     }
69 
70   oss << " ---------------------------------------------------------------------------- \n";
71 
72   return oss\&.str();
73 
74 #else
75 
76   return "";
77 
78 #endif
79 }
.fi
.SS "unsigned int libMesh::RBParametrized::get_n_continuous_params () const\fC [inherited]\fP"
Get the number of continuous parameters\&. 
.SS "unsigned int libMesh::RBParametrized::get_n_discrete_params () const\fC [inherited]\fP"
Get the number of discrete parameters\&. 
.SS "unsigned int libMesh::RBParametrized::get_n_params () const\fC [inherited]\fP"
Get the number of parameters\&. 
.SS "\fBReal\fP libMesh::RBParametrized::get_parameter_max (const std::string &param_name) const\fC [inherited]\fP"
Get maximum allowable value of parameter \fCparam_name\fP\&. 
.SS "\fBReal\fP libMesh::RBParametrized::get_parameter_min (const std::string &param_name) const\fC [inherited]\fP"
Get minimum allowable value of parameter \fCparam_name\fP\&. 
.SS "std::set<std::string> libMesh::RBParametrized::get_parameter_names () const\fC [inherited]\fP"
Get a set that stores the parameter names\&. 
.SS "const \fBRBParameters\fP& libMesh::RBParametrized::get_parameters () const\fC [inherited]\fP"
Get the current parameters\&. 
.SS "const \fBRBParameters\fP& libMesh::RBParametrized::get_parameters_max () const\fC [inherited]\fP"
Get an \fBRBParameters\fP object that specifies the maximum allowable value for each parameter\&. 
.SS "const \fBRBParameters\fP& libMesh::RBParametrized::get_parameters_min () const\fC [inherited]\fP"
Get an \fBRBParameters\fP object that specifies the minimum allowable value for each parameter\&. 
.SS "\fBRBThetaExpansion\fP& libMesh::RBSCMEvaluation::get_rb_theta_expansion ()"
Get a reference to the rb_theta_expansion\&. 
.SS "virtual \fBReal\fP libMesh::RBSCMEvaluation::get_SCM_LB ()\fC [virtual]\fP"
Evaluate single SCM lower bound\&. 
.SS "virtual \fBReal\fP libMesh::RBSCMEvaluation::get_SCM_UB ()\fC [virtual]\fP"
Evaluate single SCM upper bound\&. 
.SS "\fBReal\fP libMesh::RBSCMEvaluation::get_SCM_UB_vector (unsigned intj, unsigned intq)"
Get entries of SCM_UB_vector, which stores the vector y, corresponding to the minimizing eigenvectors for the elements of C_J\&. 
.SS "void libMesh::ReferenceCounter::increment_constructor_count (const std::string &name)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Increments the construction counter\&. Should be called in the constructor of any derived class that will be reference counted\&. 
.PP
Definition at line 163 of file reference_counter\&.h\&.
.PP
References libMesh::ReferenceCounter::_counts, libMesh::Quality::name(), and libMesh::Threads::spin_mtx\&.
.PP
Referenced by libMesh::ReferenceCountedObject< RBParametrized >::ReferenceCountedObject()\&.
.PP
.nf
164 {
165   Threads::spin_mutex::scoped_lock lock(Threads::spin_mtx);
166   std::pair<unsigned int, unsigned int>& p = _counts[name];
167 
168   p\&.first++;
169 }
.fi
.SS "void libMesh::ReferenceCounter::increment_destructor_count (const std::string &name)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Increments the destruction counter\&. Should be called in the destructor of any derived class that will be reference counted\&. 
.PP
Definition at line 176 of file reference_counter\&.h\&.
.PP
References libMesh::ReferenceCounter::_counts, libMesh::Quality::name(), and libMesh::Threads::spin_mtx\&.
.PP
Referenced by libMesh::ReferenceCountedObject< RBParametrized >::~ReferenceCountedObject()\&.
.PP
.nf
177 {
178   Threads::spin_mutex::scoped_lock lock(Threads::spin_mtx);
179   std::pair<unsigned int, unsigned int>& p = _counts[name];
180 
181   p\&.second++;
182 }
.fi
.SS "void libMesh::RBParametrized::initialize_parameters (const \fBRBParameters\fP &mu_min_in, const \fBRBParameters\fP &mu_max_in, const std::map< std::string, std::vector< \fBReal\fP > > &discrete_parameter_values)\fC [inherited]\fP"
Initialize the parameter ranges and set current_parameters\&. 
.SS "void libMesh::RBParametrized::initialize_parameters (const \fBRBParametrized\fP &rb_parametrized)\fC [inherited]\fP"
Initialize the parameter ranges and set current_parameters\&. 
.SS "bool libMesh::RBParametrized::is_discrete_parameter (const std::string &mu_name) const\fC [inherited]\fP"
Is parameter \fCmu_name\fP discrete? 
.SS "static unsigned int libMesh::ReferenceCounter::n_objects ()\fC [inline]\fP, \fC [static]\fP, \fC [inherited]\fP"
Prints the number of outstanding (created, but not yet destroyed) objects\&. 
.PP
Definition at line 79 of file reference_counter\&.h\&.
.PP
References libMesh::ReferenceCounter::_n_objects\&.
.PP
.nf
80   { return _n_objects; }
.fi
.SS "\fBprocessor_id_type\fP libMesh::ParallelObject::n_processors () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
\fBReturns:\fP
.RS 4
the number of processors in the group\&. 
.RE
.PP

.PP
Definition at line 92 of file parallel_object\&.h\&.
.PP
References libMesh::ParallelObject::_communicator, and libMesh::Parallel::Communicator::size()\&.
.PP
Referenced by libMesh::ParmetisPartitioner::_do_repartition(), libMesh::ParallelMesh::add_elem(), libMesh::ParallelMesh::add_node(), libMesh::LaplaceMeshSmoother::allgather_graph(), libMesh::ParmetisPartitioner::assign_partitioning(), libMesh::ParallelMesh::assign_unique_ids(), libMesh::AztecLinearSolver< T >::AztecLinearSolver(), libMesh::ParallelMesh::clear(), libMesh::Nemesis_IO_Helper::compute_border_node_ids(), libMesh::Nemesis_IO_Helper::construct_nemesis_filename(), libMesh::UnstructuredMesh::create_pid_mesh(), libMesh::DofMap::distribute_dofs(), libMesh::DofMap::distribute_local_dofs_node_major(), libMesh::DofMap::distribute_local_dofs_var_major(), libMesh::EnsightIO::EnsightIO(), libMesh::MeshBase::get_info(), libMesh::EquationSystems::init(), libMesh::SystemSubsetBySubdomain::init(), libMesh::ParmetisPartitioner::initialize(), libMesh::Nemesis_IO_Helper::initialize(), libMesh::MeshTools::libmesh_assert_valid_dof_ids(), libMesh::MeshTools::libmesh_assert_valid_procids< Elem >(), libMesh::MeshTools::libmesh_assert_valid_procids< Node >(), libMesh::MeshTools::libmesh_assert_valid_refinement_flags(), libMesh::DofMap::local_variable_indices(), libMesh::MeshBase::n_active_elem_on_proc(), libMesh::MeshBase::n_elem_on_proc(), libMesh::MeshBase::n_nodes_on_proc(), libMesh::Partitioner::partition(), libMesh::MeshBase::partition(), libMesh::Partitioner::partition_unpartitioned_elements(), libMesh::PetscLinearSolver< T >::PetscLinearSolver(), libMesh::System::point_gradient(), libMesh::System::point_hessian(), libMesh::System::point_value(), libMesh::MeshTools::processor_bounding_box(), libMesh::System::project_vector(), libMesh::Nemesis_IO::read(), libMesh::CheckpointIO::read(), libMesh::UnstructuredMesh::read(), libMesh::System::read_parallel_data(), libMesh::System::read_SCALAR_dofs(), libMesh::System::read_serialized_blocked_dof_objects(), libMesh::System::read_serialized_vector(), libMesh::Partitioner::repartition(), libMesh::Partitioner::set_node_processor_ids(), libMesh::DofMap::set_nonlocal_dof_objects(), libMesh::BoundaryInfo::sync(), libMesh::ParallelMesh::update_parallel_id_counts(), libMesh::CheckpointIO::write(), libMesh::GMVIO::write_binary(), libMesh::GMVIO::write_discontinuous_gmv(), libMesh::System::write_parallel_data(), libMesh::System::write_SCALAR_dofs(), libMesh::XdrIO::write_serialized_bcs(), libMesh::System::write_serialized_blocked_dof_objects(), libMesh::XdrIO::write_serialized_connectivity(), libMesh::XdrIO::write_serialized_nodes(), and libMesh::XdrIO::write_serialized_nodesets()\&.
.PP
.nf
93   { return libmesh_cast_int<processor_id_type>(_communicator\&.size()); }
.fi
.SS "void libMesh::RBParametrized::print_discrete_parameter_values () const\fC [inherited]\fP"
Print out all the discrete parameter values\&. 
.SS "void libMesh::ReferenceCounter::print_info (std::ostream &out = \fC\fBlibMesh::out\fP\fP)\fC [static]\fP, \fC [inherited]\fP"
Prints the reference information, by default to \fC\fBlibMesh::out\fP\fP\&. 
.PP
Definition at line 88 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_enable_print_counter, and libMesh::ReferenceCounter::get_info()\&.
.PP
.nf
89 {
90   if( _enable_print_counter ) out_stream << ReferenceCounter::get_info();
91 }
.fi
.SS "void libMesh::RBParametrized::print_parameters () const\fC [inherited]\fP"
Print the current parameters\&. 
.SS "\fBprocessor_id_type\fP libMesh::ParallelObject::processor_id () const\fC [inline]\fP, \fC [inherited]\fP"

.PP
\fBReturns:\fP
.RS 4
the rank of this processor in the group\&. 
.RE
.PP

.PP
Definition at line 98 of file parallel_object\&.h\&.
.PP
References libMesh::ParallelObject::_communicator, and libMesh::Parallel::Communicator::rank()\&.
.PP
Referenced by libMesh::MetisPartitioner::_do_partition(), libMesh::EquationSystems::_read_impl(), libMesh::SerialMesh::active_local_elements_begin(), libMesh::ParallelMesh::active_local_elements_begin(), libMesh::SerialMesh::active_local_elements_end(), libMesh::ParallelMesh::active_local_elements_end(), libMesh::SerialMesh::active_local_subdomain_elements_begin(), libMesh::ParallelMesh::active_local_subdomain_elements_begin(), libMesh::SerialMesh::active_local_subdomain_elements_end(), libMesh::ParallelMesh::active_local_subdomain_elements_end(), libMesh::SerialMesh::active_not_local_elements_begin(), libMesh::ParallelMesh::active_not_local_elements_begin(), libMesh::SerialMesh::active_not_local_elements_end(), libMesh::ParallelMesh::active_not_local_elements_end(), libMesh::ParallelMesh::add_elem(), libMesh::DofMap::add_neighbors_to_send_list(), libMesh::ParallelMesh::add_node(), libMesh::UnstructuredMesh::all_second_order(), libMesh::ParmetisPartitioner::assign_partitioning(), libMesh::ParallelMesh::assign_unique_ids(), libMesh::EquationSystems::build_discontinuous_solution_vector(), libMesh::Nemesis_IO_Helper::build_element_and_node_maps(), libMesh::ParmetisPartitioner::build_graph(), libMesh::InfElemBuilder::build_inf_elem(), libMesh::DofMap::build_sparsity(), libMesh::ParallelMesh::clear(), libMesh::ExodusII_IO_Helper::close(), libMesh::Nemesis_IO_Helper::compute_border_node_ids(), libMesh::Nemesis_IO_Helper::compute_communication_map_parameters(), libMesh::Nemesis_IO_Helper::compute_internal_and_border_elems_and_internal_nodes(), libMesh::Nemesis_IO_Helper::compute_node_communication_maps(), libMesh::Nemesis_IO_Helper::compute_num_global_elem_blocks(), libMesh::Nemesis_IO_Helper::compute_num_global_nodesets(), libMesh::Nemesis_IO_Helper::compute_num_global_sidesets(), libMesh::Nemesis_IO_Helper::construct_nemesis_filename(), libMesh::ExodusII_IO_Helper::create(), libMesh::DofMap::distribute_dofs(), libMesh::DofMap::distribute_local_dofs_node_major(), libMesh::DofMap::distribute_local_dofs_var_major(), libMesh::DofMap::end_dof(), libMesh::DofMap::end_old_dof(), libMesh::EnsightIO::EnsightIO(), libMesh::UnstructuredMesh::find_neighbors(), libMesh::DofMap::first_dof(), libMesh::DofMap::first_old_dof(), libMesh::Nemesis_IO_Helper::get_cmap_params(), libMesh::Nemesis_IO_Helper::get_eb_info_global(), libMesh::Nemesis_IO_Helper::get_elem_cmap(), libMesh::Nemesis_IO_Helper::get_elem_map(), libMesh::MeshBase::get_info(), libMesh::Nemesis_IO_Helper::get_init_global(), libMesh::Nemesis_IO_Helper::get_init_info(), libMesh::Nemesis_IO_Helper::get_loadbal_param(), libMesh::Nemesis_IO_Helper::get_node_cmap(), libMesh::Nemesis_IO_Helper::get_node_map(), libMesh::Nemesis_IO_Helper::get_ns_param_global(), libMesh::Nemesis_IO_Helper::get_ss_param_global(), libMesh::MeshFunction::gradient(), libMesh::MeshFunction::hessian(), libMesh::SystemSubsetBySubdomain::init(), libMesh::ParmetisPartitioner::initialize(), libMesh::ExodusII_IO_Helper::initialize(), libMesh::ExodusII_IO_Helper::initialize_element_variables(), libMesh::ExodusII_IO_Helper::initialize_global_variables(), libMesh::ExodusII_IO_Helper::initialize_nodal_variables(), libMesh::SparsityPattern::Build::join(), libMesh::DofMap::last_dof(), libMesh::MeshTools::libmesh_assert_valid_procids< Elem >(), libMesh::MeshTools::libmesh_assert_valid_procids< Node >(), libMesh::SerialMesh::local_elements_begin(), libMesh::ParallelMesh::local_elements_begin(), libMesh::SerialMesh::local_elements_end(), libMesh::ParallelMesh::local_elements_end(), libMesh::SerialMesh::local_level_elements_begin(), libMesh::ParallelMesh::local_level_elements_begin(), libMesh::SerialMesh::local_level_elements_end(), libMesh::ParallelMesh::local_level_elements_end(), libMesh::SerialMesh::local_nodes_begin(), libMesh::ParallelMesh::local_nodes_begin(), libMesh::SerialMesh::local_nodes_end(), libMesh::ParallelMesh::local_nodes_end(), libMesh::SerialMesh::local_not_level_elements_begin(), libMesh::ParallelMesh::local_not_level_elements_begin(), libMesh::SerialMesh::local_not_level_elements_end(), libMesh::ParallelMesh::local_not_level_elements_end(), libMesh::DofMap::local_variable_indices(), libMesh::MeshRefinement::make_coarsening_compatible(), libMesh::MeshBase::n_active_local_elem(), libMesh::BoundaryInfo::n_boundary_conds(), libMesh::BoundaryInfo::n_edge_conds(), libMesh::DofMap::n_local_dofs(), libMesh::System::n_local_dofs(), libMesh::MeshBase::n_local_elem(), libMesh::MeshBase::n_local_nodes(), libMesh::BoundaryInfo::n_nodeset_conds(), libMesh::SerialMesh::not_local_elements_begin(), libMesh::ParallelMesh::not_local_elements_begin(), libMesh::SerialMesh::not_local_elements_end(), libMesh::ParallelMesh::not_local_elements_end(), libMesh::WeightedPatchRecoveryErrorEstimator::EstimateError::operator()(), libMesh::SparsityPattern::Build::operator()(), libMesh::PatchRecoveryErrorEstimator::EstimateError::operator()(), libMesh::MeshFunction::operator()(), libMesh::ParallelMesh::ParallelMesh(), libMesh::System::point_gradient(), libMesh::System::point_hessian(), libMesh::System::point_value(), libMesh::System::project_vector(), libMesh::Nemesis_IO_Helper::put_cmap_params(), libMesh::Nemesis_IO_Helper::put_elem_cmap(), libMesh::Nemesis_IO_Helper::put_elem_map(), libMesh::Nemesis_IO_Helper::put_loadbal_param(), libMesh::Nemesis_IO_Helper::put_node_cmap(), libMesh::Nemesis_IO_Helper::put_node_map(), libMesh::Nemesis_IO::read(), libMesh::CheckpointIO::read(), libMesh::XdrIO::read(), libMesh::UnstructuredMesh::read(), libMesh::CheckpointIO::read_connectivity(), libMesh::ExodusII_IO_Helper::read_elem_num_map(), libMesh::System::read_header(), libMesh::System::read_legacy_data(), libMesh::ExodusII_IO_Helper::read_node_num_map(), libMesh::System::read_parallel_data(), libMesh::System::read_SCALAR_dofs(), libMesh::XdrIO::read_serialized_bc_names(), libMesh::XdrIO::read_serialized_bcs(), libMesh::System::read_serialized_blocked_dof_objects(), libMesh::XdrIO::read_serialized_connectivity(), libMesh::System::read_serialized_data(), libMesh::XdrIO::read_serialized_nodes(), libMesh::XdrIO::read_serialized_nodesets(), libMesh::XdrIO::read_serialized_subdomain_names(), libMesh::System::read_serialized_vector(), libMesh::System::read_serialized_vectors(), libMesh::MeshData::read_xdr(), libMesh::Partitioner::set_node_processor_ids(), libMesh::DofMap::set_nonlocal_dof_objects(), libMesh::LaplaceMeshSmoother::smooth(), libMesh::BoundaryInfo::sync(), libMesh::MeshTools::total_weight(), libMesh::ParallelMesh::update_parallel_id_counts(), libMesh::MeshTools::weight(), libMesh::ExodusII_IO::write(), libMesh::CheckpointIO::write(), libMesh::XdrIO::write(), libMesh::UnstructuredMesh::write(), libMesh::EquationSystems::write(), libMesh::GMVIO::write_discontinuous_gmv(), libMesh::ExodusII_IO::write_element_data(), libMesh::ExodusII_IO_Helper::write_element_values(), libMesh::ExodusII_IO_Helper::write_elements(), libMesh::ExodusII_IO::write_global_data(), libMesh::ExodusII_IO_Helper::write_global_values(), libMesh::System::write_header(), libMesh::ExodusII_IO::write_information_records(), libMesh::ExodusII_IO_Helper::write_information_records(), libMesh::ExodusII_IO_Helper::write_nodal_coordinates(), libMesh::UCDIO::write_nodal_data(), libMesh::ExodusII_IO::write_nodal_data(), libMesh::ExodusII_IO::write_nodal_data_discontinuous(), libMesh::ExodusII_IO_Helper::write_nodal_values(), libMesh::ExodusII_IO_Helper::write_nodesets(), libMesh::Nemesis_IO_Helper::write_nodesets(), libMesh::System::write_parallel_data(), libMesh::System::write_SCALAR_dofs(), libMesh::XdrIO::write_serialized_bc_names(), libMesh::XdrIO::write_serialized_bcs(), libMesh::System::write_serialized_blocked_dof_objects(), libMesh::XdrIO::write_serialized_connectivity(), libMesh::System::write_serialized_data(), libMesh::XdrIO::write_serialized_nodes(), libMesh::XdrIO::write_serialized_nodesets(), libMesh::XdrIO::write_serialized_subdomain_names(), libMesh::System::write_serialized_vector(), libMesh::System::write_serialized_vectors(), libMesh::ExodusII_IO_Helper::write_sidesets(), libMesh::Nemesis_IO_Helper::write_sidesets(), libMesh::ExodusII_IO::write_timestep(), and libMesh::ExodusII_IO_Helper::write_timestep()\&.
.PP
.nf
99   { return libmesh_cast_int<processor_id_type>(_communicator\&.rank()); }
.fi
.SS "virtual void libMesh::RBSCMEvaluation::read_offline_data_from_files (const std::string &directory_name = \fC'offline_data'\fP, const boolread_binary_data = \fCtrue\fP)\fC [virtual]\fP"
Read in the saved Offline reduced basis data to initialize the system for Online solves\&. 
.SS "void libMesh::RBParametrized::read_parameter_data_from_files (const std::string &continuous_param_file_name, const std::string &discrete_param_file_name, const boolread_binary_data)\fC [inherited]\fP"
Read in the parameter ranges from files\&. 
.SS "virtual void libMesh::RBSCMEvaluation::reload_current_parameters ()\fC [virtual]\fP"
Helper functiont to (re)load current_parameters from saved_parameters\&. 
.SS "virtual void libMesh::RBSCMEvaluation::save_current_parameters ()\fC [virtual]\fP"
Helper function to save current_parameters in saved_parameters\&. 
.SS "void libMesh::RBSCMEvaluation::set_B_max (unsigned inti, \fBReal\fPB_max_val)"

.SS "void libMesh::RBSCMEvaluation::set_B_min (unsigned inti, \fBReal\fPB_min_val)"
Set B_min and B_max\&. 
.SS "void libMesh::RBSCMEvaluation::set_C_J_stability_constraint (unsigned intj, \fBReal\fPstability_constraint_in)"
Set stability constraints (i\&.e\&. the values of coercivity/ inf-sup/stability constants at the parameter values chosen during the greedy); we store one constraint for each element of C_J\&. 
.SS "virtual void libMesh::RBSCMEvaluation::set_current_parameters_from_C_J (unsigned intC_J_index)\fC [virtual]\fP"
Set parameters based on values saved in 'C_J' 
.SS "void libMesh::RBParametrized::set_parameters (const \fBRBParameters\fP &params)\fC [inherited]\fP"
Set the current parameters to \fCparams\fP 
.SS "void libMesh::RBSCMEvaluation::set_rb_theta_expansion (\fBRBThetaExpansion\fP &rb_theta_expansion_in)"
Set the \fBRBThetaExpansion\fP object\&. 
.SS "void libMesh::RBSCMEvaluation::set_SCM_UB_vector (unsigned intj, unsigned intq, \fBReal\fPy_q)"
Set entries of SCM_UB_vector, which stores the vector y, corresponding to the minimizing eigenvectors for the elements of C_J\&. 
.SS "virtual void libMesh::RBSCMEvaluation::write_offline_data_to_files (const std::string &directory_name = \fC'offline_data'\fP, const boolwrite_binary_data = \fCtrue\fP)\fC [virtual]\fP"
Write out all the data to text files in order to segregate the Offline stage from the Online stage\&. 
.SS "void libMesh::RBParametrized::write_parameter_data_to_files (const std::string &continuous_param_file_name, const std::string &discrete_param_file_name, const boolwrite_binary_data)\fC [inherited]\fP"
Write out the parameter ranges to files\&. 
.SH "Member Data Documentation"
.PP 
.SS "const \fBParallel::Communicator\fP& libMesh::ParallelObject::_communicator\fC [protected]\fP, \fC [inherited]\fP"

.PP
Definition at line 104 of file parallel_object\&.h\&.
.PP
Referenced by libMesh::EquationSystems::build_solution_vector(), libMesh::ParallelObject::comm(), libMesh::EquationSystems::get_solution(), libMesh::ParallelObject::n_processors(), libMesh::ParallelObject::operator=(), and libMesh::ParallelObject::processor_id()\&.
.SS "\fBReferenceCounter::Counts\fP libMesh::ReferenceCounter::_counts\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Actually holds the data\&. 
.PP
Definition at line 118 of file reference_counter\&.h\&.
.PP
Referenced by libMesh::ReferenceCounter::get_info(), libMesh::ReferenceCounter::increment_constructor_count(), and libMesh::ReferenceCounter::increment_destructor_count()\&.
.SS "bool libMesh::ReferenceCounter::_enable_print_counter = true\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Flag to control whether reference count information is printed when print_info is called\&. 
.PP
Definition at line 137 of file reference_counter\&.h\&.
.PP
Referenced by libMesh::ReferenceCounter::disable_print_counter_info(), libMesh::ReferenceCounter::enable_print_counter_info(), and libMesh::ReferenceCounter::print_info()\&.
.SS "\fBThreads::spin_mutex\fP libMesh::ReferenceCounter::_mutex\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Mutual exclusion object to enable thread-safe reference counting\&. 
.PP
Definition at line 131 of file reference_counter\&.h\&.
.SS "\fBThreads::atomic\fP< unsigned int > libMesh::ReferenceCounter::_n_objects\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
The number of objects\&. Print the reference count information when the number returns to 0\&. 
.PP
Definition at line 126 of file reference_counter\&.h\&.
.PP
Referenced by libMesh::ReferenceCounter::n_objects(), libMesh::ReferenceCounter::ReferenceCounter(), and libMesh::ReferenceCounter::~ReferenceCounter()\&.
.SS "std::vector<\fBReal\fP> libMesh::RBSCMEvaluation::B_max"

.PP
Definition at line 180 of file rb_scm_evaluation\&.h\&.
.SS "std::vector<\fBReal\fP> libMesh::RBSCMEvaluation::B_min"
B_min, B_max define the bounding box\&. 
.PP
Definition at line 179 of file rb_scm_evaluation\&.h\&.
.SS "std::vector< \fBRBParameters\fP > libMesh::RBSCMEvaluation::C_J"
Vector storing the greedily selected parameters during SCM training\&. 
.PP
Definition at line 186 of file rb_scm_evaluation\&.h\&.
.PP
Referenced by get_C_J_size()\&.
.SS "std::vector<\fBReal\fP> libMesh::RBSCMEvaluation::C_J_stability_vector"
Vector storing the (truth) stability values at the parameters in C_J\&. 
.PP
Definition at line 192 of file rb_scm_evaluation\&.h\&.
.PP
Referenced by get_C_J_stability_value()\&.
.SS "\fBRBThetaExpansion\fP* libMesh::RBSCMEvaluation::rb_theta_expansion\fC [private]\fP"
A pointer to to the object that stores the theta expansion\&. This is not an \fBAutoPtr\fP since we may want to share it\&. (Note: a shared_ptr would be a good option here\&.) 
.PP
Definition at line 215 of file rb_scm_evaluation\&.h\&.
.SS "\fBRBParameters\fP libMesh::RBSCMEvaluation::saved_parameters\fC [private]\fP"
Vector in which to save a parameter set\&. Useful in get_SCM_LB, for example\&. 
.PP
Definition at line 208 of file rb_scm_evaluation\&.h\&.
.SS "std::vector< std::vector<\fBReal\fP> > libMesh::RBSCMEvaluation::SCM_UB_vectors"
This matrix stores the infimizing vectors y_1(),\&.\&.\&.,y_Q_a(), for each  in C_J, which are used in computing the SCM upper bounds\&. 
.PP
Definition at line 200 of file rb_scm_evaluation\&.h\&.
.SS "bool libMesh::RBParametrized::verbose_mode\fC [inherited]\fP"
Public boolean to toggle verbose mode\&. 
.PP
Definition at line 172 of file rb_parametrized\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
