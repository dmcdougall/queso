.TH "libMesh::RBAssemblyExpansion" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::RBAssemblyExpansion \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <rb_assembly_expansion\&.h>\fP
.PP
Inherits \fBlibMesh::ReferenceCountedObject< RBAssemblyExpansion >\fP\&.
.PP
Inherited by \fBlibMesh::TransientRBAssemblyExpansion\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRBAssemblyExpansion\fP ()"
.br
.ti -1c
.RI "virtual \fB~RBAssemblyExpansion\fP ()"
.br
.ti -1c
.RI "void \fBperform_A_interior_assembly\fP (unsigned int q, \fBFEMContext\fP &context)"
.br
.ti -1c
.RI "void \fBperform_A_boundary_assembly\fP (unsigned int q, \fBFEMContext\fP &context)"
.br
.ti -1c
.RI "void \fBperform_F_interior_assembly\fP (unsigned int q, \fBFEMContext\fP &context)"
.br
.ti -1c
.RI "void \fBperform_F_boundary_assembly\fP (unsigned int q, \fBFEMContext\fP &context)"
.br
.ti -1c
.RI "void \fBperform_output_interior_assembly\fP (unsigned int output_index, unsigned int q_l, \fBFEMContext\fP &context)"
.br
.ti -1c
.RI "void \fBperform_output_boundary_assembly\fP (unsigned int output_index, unsigned int q_l, \fBFEMContext\fP &context)"
.br
.ti -1c
.RI "unsigned int \fBget_n_A_terms\fP () const "
.br
.ti -1c
.RI "unsigned int \fBget_n_F_terms\fP () const "
.br
.ti -1c
.RI "unsigned int \fBget_n_outputs\fP () const "
.br
.ti -1c
.RI "unsigned int \fBget_n_output_terms\fP (unsigned int output_index) const "
.br
.ti -1c
.RI "void \fBattach_A_assembly\fP (\fBElemAssembly\fP *Aq_assembly)"
.br
.ti -1c
.RI "void \fBattach_multiple_A_assembly\fP (std::vector< \fBElemAssembly\fP * > Aq_assembly)"
.br
.ti -1c
.RI "void \fBattach_F_assembly\fP (\fBElemAssembly\fP *Fq_assembly)"
.br
.ti -1c
.RI "void \fBattach_multiple_F_assembly\fP (std::vector< \fBElemAssembly\fP * > Fq_assembly)"
.br
.ti -1c
.RI "virtual void \fBattach_output_assembly\fP (std::vector< \fBElemAssembly\fP * > output_assembly)"
.br
.ti -1c
.RI "virtual void \fBattach_output_assembly\fP (\fBElemAssembly\fP *output_assembly)"
.br
.ti -1c
.RI "\fBElemAssembly\fP & \fBget_A_assembly\fP (unsigned int q)"
.br
.ti -1c
.RI "\fBElemAssembly\fP & \fBget_F_assembly\fP (unsigned int q)"
.br
.ti -1c
.RI "\fBElemAssembly\fP & \fBget_output_assembly\fP (unsigned int output_index, unsigned int q_l)"
.br
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static std::string \fBget_info\fP ()"
.br
.ti -1c
.RI "static void \fBprint_info\fP (std::ostream &\fBout\fP=\fBlibMesh::out\fP)"
.br
.ti -1c
.RI "static unsigned int \fBn_objects\fP ()"
.br
.ti -1c
.RI "static void \fBenable_print_counter_info\fP ()"
.br
.ti -1c
.RI "static void \fBdisable_print_counter_info\fP ()"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "typedef std::map< std::string, 
.br
std::pair< unsigned int, 
.br
unsigned int > > \fBCounts\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBincrement_constructor_count\fP (const std::string &name)"
.br
.ti -1c
.RI "void \fBincrement_destructor_count\fP (const std::string &name)"
.br
.in -1c
.SS "Static Protected Attributes"

.in +1c
.ti -1c
.RI "static \fBCounts\fP \fB_counts\fP"
.br
.ti -1c
.RI "static \fBThreads::atomic\fP
.br
< unsigned int > \fB_n_objects\fP"
.br
.ti -1c
.RI "static \fBThreads::spin_mutex\fP \fB_mutex\fP"
.br
.ti -1c
.RI "static bool \fB_enable_print_counter\fP = true"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::vector< \fBElemAssembly\fP * > \fB_A_assembly_vector\fP"
.br
.ti -1c
.RI "std::vector< \fBElemAssembly\fP * > \fB_F_assembly_vector\fP"
.br
.ti -1c
.RI "std::vector< std::vector
.br
< \fBElemAssembly\fP * > > \fB_output_assembly_vector\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class stores the set of \fBElemAssembly\fP functor objects that define the 'parameter-independent expansion' of a PDE\&.
.PP
\fBAuthor:\fP
.RS 4
David J\&. Knezevic, 2011 
.RE
.PP

.PP
Definition at line 43 of file rb_assembly_expansion\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::map<std::string, std::pair<unsigned int, unsigned int> > \fBlibMesh::ReferenceCounter::Counts\fP\fC [protected]\fP, \fC [inherited]\fP"
Data structure to log the information\&. The log is identified by the class name\&. 
.PP
Definition at line 113 of file reference_counter\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "libMesh::RBAssemblyExpansion::RBAssemblyExpansion ()"
Constructor\&. 
.SS "virtual libMesh::RBAssemblyExpansion::~RBAssemblyExpansion ()\fC [inline]\fP, \fC [virtual]\fP"
Destructor\&. 
.PP
Definition at line 55 of file rb_assembly_expansion\&.h\&.
.PP
.nf
55 {}
.fi
.SH "Member Function Documentation"
.PP 
.SS "void libMesh::RBAssemblyExpansion::attach_A_assembly (\fBElemAssembly\fP *Aq_assembly)"
Attach \fBElemAssembly\fP object for the left-hand side (both interior and boundary assembly)\&. 
.SS "void libMesh::RBAssemblyExpansion::attach_F_assembly (\fBElemAssembly\fP *Fq_assembly)"
Attach \fBElemAssembly\fP object for the right-hand side (both interior and boundary assembly)\&. 
.SS "void libMesh::RBAssemblyExpansion::attach_multiple_A_assembly (std::vector< \fBElemAssembly\fP * >Aq_assembly)"
Attach multiple \fBElemAssembly\fP objects for the left-hand side (both interior and boundary assembly)\&. 
.SS "void libMesh::RBAssemblyExpansion::attach_multiple_F_assembly (std::vector< \fBElemAssembly\fP * >Fq_assembly)"
Attach multiple \fBElemAssembly\fP objects for the right-hand side (both interior and boundary assembly)\&. 
.SS "virtual void libMesh::RBAssemblyExpansion::attach_output_assembly (std::vector< \fBElemAssembly\fP * >output_assembly)\fC [virtual]\fP"
Attach \fBElemAssembly\fP object for an output (both interior and boundary assembly)\&. In this case we pass in vector arguments to allow for Q_l > 1\&. 
.SS "virtual void libMesh::RBAssemblyExpansion::attach_output_assembly (\fBElemAssembly\fP *output_assembly)\fC [virtual]\fP"
Attach \fBElemAssembly\fP object for an output (both interior and boundary assembly)\&. This function provides simpler syntax in the case that Q_l = 1; we do not need to use a vector in this case\&. 
.SS "void libMesh::ReferenceCounter::disable_print_counter_info ()\fC [static]\fP, \fC [inherited]\fP"

.PP
Definition at line 106 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_enable_print_counter\&.
.PP
.nf
107 {
108   _enable_print_counter = false;
109   return;
110 }
.fi
.SS "void libMesh::ReferenceCounter::enable_print_counter_info ()\fC [static]\fP, \fC [inherited]\fP"
Methods to enable/disable the reference counter output from \fBprint_info()\fP 
.PP
Definition at line 100 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_enable_print_counter\&.
.PP
.nf
101 {
102   _enable_print_counter = true;
103   return;
104 }
.fi
.SS "\fBElemAssembly\fP& libMesh::RBAssemblyExpansion::get_A_assembly (unsigned intq)"
Return a reference to the specified A_assembly object\&. 
.SS "\fBElemAssembly\fP& libMesh::RBAssemblyExpansion::get_F_assembly (unsigned intq)"
Return a reference to the specified F_assembly object\&. 
.SS "std::string libMesh::ReferenceCounter::get_info ()\fC [static]\fP, \fC [inherited]\fP"
Gets a string containing the reference information\&. 
.PP
Definition at line 47 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_counts, and libMesh::Quality::name()\&.
.PP
Referenced by libMesh::ReferenceCounter::print_info()\&.
.PP
.nf
48 {
49 #if defined(LIBMESH_ENABLE_REFERENCE_COUNTING) && defined(DEBUG)
50 
51   std::ostringstream oss;
52 
53   oss << '\n'
54       << " ---------------------------------------------------------------------------- \n"
55       << "| Reference count information                                                |\n"
56       << " ---------------------------------------------------------------------------- \n";
57 
58   for (Counts::iterator it = _counts\&.begin();
59        it != _counts\&.end(); ++it)
60     {
61       const std::string name(it->first);
62       const unsigned int creations    = it->second\&.first;
63       const unsigned int destructions = it->second\&.second;
64 
65       oss << "| " << name << " reference count information:\n"
66           << "|  Creations:    " << creations    << '\n'
67           << "|  Destructions: " << destructions << '\n';
68     }
69 
70   oss << " ---------------------------------------------------------------------------- \n";
71 
72   return oss\&.str();
73 
74 #else
75 
76   return "";
77 
78 #endif
79 }
.fi
.SS "unsigned int libMesh::RBAssemblyExpansion::get_n_A_terms () const"
Get Q_a, the number of terms in the affine expansion for the bilinear form\&. 
.SS "unsigned int libMesh::RBAssemblyExpansion::get_n_F_terms () const"
Get Q_f, the number of terms in the affine expansion for the right-hand side\&. 
.SS "unsigned int libMesh::RBAssemblyExpansion::get_n_output_terms (unsigned intoutput_index) const"
Get the number of affine terms associated with the specified output\&. 
.SS "unsigned int libMesh::RBAssemblyExpansion::get_n_outputs () const"
Get n_outputs, the number output functionals\&. 
.SS "\fBElemAssembly\fP& libMesh::RBAssemblyExpansion::get_output_assembly (unsigned intoutput_index, unsigned intq_l)"
Return a reference to the specified output assembly object\&. 
.SS "void libMesh::ReferenceCounter::increment_constructor_count (const std::string &name)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Increments the construction counter\&. Should be called in the constructor of any derived class that will be reference counted\&. 
.PP
Definition at line 163 of file reference_counter\&.h\&.
.PP
References libMesh::ReferenceCounter::_counts, libMesh::Quality::name(), and libMesh::Threads::spin_mtx\&.
.PP
Referenced by libMesh::ReferenceCountedObject< RBParametrized >::ReferenceCountedObject()\&.
.PP
.nf
164 {
165   Threads::spin_mutex::scoped_lock lock(Threads::spin_mtx);
166   std::pair<unsigned int, unsigned int>& p = _counts[name];
167 
168   p\&.first++;
169 }
.fi
.SS "void libMesh::ReferenceCounter::increment_destructor_count (const std::string &name)\fC [inline]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Increments the destruction counter\&. Should be called in the destructor of any derived class that will be reference counted\&. 
.PP
Definition at line 176 of file reference_counter\&.h\&.
.PP
References libMesh::ReferenceCounter::_counts, libMesh::Quality::name(), and libMesh::Threads::spin_mtx\&.
.PP
Referenced by libMesh::ReferenceCountedObject< RBParametrized >::~ReferenceCountedObject()\&.
.PP
.nf
177 {
178   Threads::spin_mutex::scoped_lock lock(Threads::spin_mtx);
179   std::pair<unsigned int, unsigned int>& p = _counts[name];
180 
181   p\&.second++;
182 }
.fi
.SS "static unsigned int libMesh::ReferenceCounter::n_objects ()\fC [inline]\fP, \fC [static]\fP, \fC [inherited]\fP"
Prints the number of outstanding (created, but not yet destroyed) objects\&. 
.PP
Definition at line 79 of file reference_counter\&.h\&.
.PP
References libMesh::ReferenceCounter::_n_objects\&.
.PP
.nf
80   { return _n_objects; }
.fi
.SS "void libMesh::RBAssemblyExpansion::perform_A_boundary_assembly (unsigned intq, \fBFEMContext\fP &context)"
Perform the specified A boundary assembly\&. 
.SS "void libMesh::RBAssemblyExpansion::perform_A_interior_assembly (unsigned intq, \fBFEMContext\fP &context)"
Perform the specified A interior assembly\&. 
.SS "void libMesh::RBAssemblyExpansion::perform_F_boundary_assembly (unsigned intq, \fBFEMContext\fP &context)"
Perform the specified F boundary assembly\&. 
.SS "void libMesh::RBAssemblyExpansion::perform_F_interior_assembly (unsigned intq, \fBFEMContext\fP &context)"
Perform the specified F interior assembly\&. 
.SS "void libMesh::RBAssemblyExpansion::perform_output_boundary_assembly (unsigned intoutput_index, unsigned intq_l, \fBFEMContext\fP &context)"
Perform the specified output assembly\&. 
.SS "void libMesh::RBAssemblyExpansion::perform_output_interior_assembly (unsigned intoutput_index, unsigned intq_l, \fBFEMContext\fP &context)"
Perform the specified output assembly\&. 
.SS "void libMesh::ReferenceCounter::print_info (std::ostream &out = \fC\fBlibMesh::out\fP\fP)\fC [static]\fP, \fC [inherited]\fP"
Prints the reference information, by default to \fC\fBlibMesh::out\fP\fP\&. 
.PP
Definition at line 88 of file reference_counter\&.C\&.
.PP
References libMesh::ReferenceCounter::_enable_print_counter, and libMesh::ReferenceCounter::get_info()\&.
.PP
.nf
89 {
90   if( _enable_print_counter ) out_stream << ReferenceCounter::get_info();
91 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "std::vector<\fBElemAssembly\fP*> libMesh::RBAssemblyExpansion::_A_assembly_vector\fC [private]\fP"
Vectors storing the function pointers to the assembly routines for the affine operators, both interior and boundary assembly\&. 
.PP
Definition at line 178 of file rb_assembly_expansion\&.h\&.
.SS "\fBReferenceCounter::Counts\fP libMesh::ReferenceCounter::_counts\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Actually holds the data\&. 
.PP
Definition at line 118 of file reference_counter\&.h\&.
.PP
Referenced by libMesh::ReferenceCounter::get_info(), libMesh::ReferenceCounter::increment_constructor_count(), and libMesh::ReferenceCounter::increment_destructor_count()\&.
.SS "bool libMesh::ReferenceCounter::_enable_print_counter = true\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Flag to control whether reference count information is printed when print_info is called\&. 
.PP
Definition at line 137 of file reference_counter\&.h\&.
.PP
Referenced by libMesh::ReferenceCounter::disable_print_counter_info(), libMesh::ReferenceCounter::enable_print_counter_info(), and libMesh::ReferenceCounter::print_info()\&.
.SS "std::vector<\fBElemAssembly\fP*> libMesh::RBAssemblyExpansion::_F_assembly_vector\fC [private]\fP"
Vector storing the function pointers to the assembly routines for the rhs affine vectors\&. 
.PP
Definition at line 184 of file rb_assembly_expansion\&.h\&.
.SS "\fBThreads::spin_mutex\fP libMesh::ReferenceCounter::_mutex\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
Mutual exclusion object to enable thread-safe reference counting\&. 
.PP
Definition at line 131 of file reference_counter\&.h\&.
.SS "\fBThreads::atomic\fP< unsigned int > libMesh::ReferenceCounter::_n_objects\fC [static]\fP, \fC [protected]\fP, \fC [inherited]\fP"
The number of objects\&. Print the reference count information when the number returns to 0\&. 
.PP
Definition at line 126 of file reference_counter\&.h\&.
.PP
Referenced by libMesh::ReferenceCounter::n_objects(), libMesh::ReferenceCounter::ReferenceCounter(), and libMesh::ReferenceCounter::~ReferenceCounter()\&.
.SS "std::vector< std::vector<\fBElemAssembly\fP*> > libMesh::RBAssemblyExpansion::_output_assembly_vector\fC [private]\fP"
Vector storing the function pointers to the assembly routines for the outputs\&. Element interior part\&. 
.PP
Definition at line 190 of file rb_assembly_expansion\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
