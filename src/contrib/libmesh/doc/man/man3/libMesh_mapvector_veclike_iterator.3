.TH "libMesh::mapvector< Val, index_t >::veclike_iterator" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::mapvector< Val, index_t >::veclike_iterator \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <mapvector\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBveclike_iterator\fP (const typename maptype::iterator &i)"
.br
.ti -1c
.RI "\fBveclike_iterator\fP (const \fBveclike_iterator\fP &i)"
.br
.ti -1c
.RI "Val & \fBoperator*\fP () const "
.br
.ti -1c
.RI "\fBveclike_iterator\fP & \fBoperator++\fP ()"
.br
.ti -1c
.RI "\fBveclike_iterator\fP \fBoperator++\fP (int)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBveclike_iterator\fP &other) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBveclike_iterator\fP &other) const "
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "maptype::iterator \fBit\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename Val, typename index_t = unsigned int>class libMesh::mapvector< Val, index_t >::veclike_iterator"

.PP
Definition at line 53 of file mapvector\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename Val, typename index_t = unsigned int> \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::veclike_iterator (const typename maptype::iterator &i)\fC [inline]\fP"

.PP
Definition at line 56 of file mapvector\&.h\&.
.PP
.nf
57       : it(i) {}
.fi
.SS "template<typename Val, typename index_t = unsigned int> \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::veclike_iterator (const \fBveclike_iterator\fP &i)\fC [inline]\fP"

.PP
Definition at line 59 of file mapvector\&.h\&.
.PP
.nf
60       : it(i\&.it) {}
.fi
.SH "Member Function Documentation"
.PP 
.SS "template<typename Val, typename index_t = unsigned int> bool \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::operator!= (const \fBveclike_iterator\fP &other) const\fC [inline]\fP"

.PP
Definition at line 76 of file mapvector\&.h\&.
.PP
References libMesh::mapvector< Val, index_t >::veclike_iterator::it\&.
.PP
.nf
76                                                          {
77       return it != other\&.it;
78     }
.fi
.SS "template<typename Val, typename index_t = unsigned int> Val& \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::operator* () const\fC [inline]\fP"

.PP
Definition at line 62 of file mapvector\&.h\&.
.PP
References libMesh::mapvector< Val, index_t >::veclike_iterator::it\&.
.PP
.nf
62 { return it->second; }
.fi
.SS "template<typename Val, typename index_t = unsigned int> \fBveclike_iterator\fP& \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::operator++ ()\fC [inline]\fP"

.PP
Definition at line 64 of file mapvector\&.h\&.
.PP
References libMesh::mapvector< Val, index_t >::veclike_iterator::it\&.
.PP
.nf
64 { ++it; return *this; }
.fi
.SS "template<typename Val, typename index_t = unsigned int> \fBveclike_iterator\fP \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::operator++ (int)\fC [inline]\fP"

.PP
Definition at line 66 of file mapvector\&.h\&.
.PP
.nf
66                                      {
67       veclike_iterator i = *this;
68       ++(*this);
69       return i;
70     }
.fi
.SS "template<typename Val, typename index_t = unsigned int> bool \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::operator== (const \fBveclike_iterator\fP &other) const\fC [inline]\fP"

.PP
Definition at line 72 of file mapvector\&.h\&.
.PP
References libMesh::mapvector< Val, index_t >::veclike_iterator::it\&.
.PP
.nf
72                                                          {
73       return it == other\&.it;
74     }
.fi
.SH "Member Data Documentation"
.PP 
.SS "template<typename Val, typename index_t = unsigned int> maptype::iterator \fBlibMesh::mapvector\fP< Val, index_t >::veclike_iterator::it"

.PP
Definition at line 80 of file mapvector\&.h\&.
.PP
Referenced by libMesh::mapvector< Val, index_t >::veclike_iterator::operator!=(), libMesh::mapvector< Val, index_t >::veclike_iterator::operator*(), libMesh::mapvector< Val, index_t >::veclike_iterator::operator++(), libMesh::mapvector< Val, index_t >::veclike_iterator::operator==(), and libMesh::mapvector< libMesh::Elem *, dof_id_type >::operator[]()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
