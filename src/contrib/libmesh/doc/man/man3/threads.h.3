.TH "threads.h" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
threads.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBlibMesh::Threads::BoolAcquire\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::Thread\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::atomic< T >\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::spin_mutex\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::spin_mutex::scoped_lock\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::spin_mutex\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::spin_mutex::scoped_lock\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::recursive_mutex\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::recursive_mutex::scoped_lock\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::RangeBody< Range, Body >\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::task_scheduler_init\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::split\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::atomic< T >\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::task_scheduler_init\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::split\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::spin_mutex\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::spin_mutex::scoped_lock\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::recursive_mutex\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::recursive_mutex::scoped_lock\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::atomic< T >\fP"
.br
.ti -1c
.RI "class \fBlibMesh::Threads::BlockedRange< T >\fP"
.br
.in -1c
.SS "Namespaces"

.in +1c
.ti -1c
.RI "\fBlibMesh\fP"
.br
.ti -1c
.RI "\fBlibMesh::Threads\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef std::thread \fBlibMesh::Threads::Thread\fP"
.br
.ti -1c
.RI "typedef tbb::task_scheduler_init \fBlibMesh::Threads::task_scheduler_init\fP"
.br
.ti -1c
.RI "typedef tbb::split \fBlibMesh::Threads::split\fP"
.br
.ti -1c
.RI "typedef tbb::spin_mutex \fBlibMesh::Threads::spin_mutex\fP"
.br
.ti -1c
.RI "typedef tbb::recursive_mutex \fBlibMesh::Threads::recursive_mutex\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "template<typename Range , typename Body > void \fBlibMesh::Threads::parallel_for\fP (const Range &range, const Body &body)"
.br
.ti -1c
.RI "template<typename Range , typename Body , typename Partitioner > void \fBlibMesh::Threads::parallel_for\fP (const Range &range, const Body &body, const Partitioner &partitioner)"
.br
.ti -1c
.RI "template<typename Range , typename Body > void \fBlibMesh::Threads::parallel_reduce\fP (const Range &range, Body &body)"
.br
.ti -1c
.RI "template<typename Range , typename Body , typename Partitioner > void \fBlibMesh::Threads::parallel_reduce\fP (const Range &range, Body &body, const Partitioner &partitioner)"
.br
.ti -1c
.RI "unsigned int \fBlibMesh::Threads::pthread_unique_id\fP ()"
.br
.ti -1c
.RI "template<typename Range > unsigned int \fBlibMesh::Threads::num_pthreads\fP (Range &range)"
.br
.ti -1c
.RI "template<typename Range , typename Body > void * \fBlibMesh::Threads::run_body\fP (void *args)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "bool \fBlibMesh::Threads::in_threads\fP = false"
.br
.ti -1c
.RI "std::map< pthread_t, unsigned int > \fBlibMesh::Threads::_pthread_unique_ids\fP"
.br
.ti -1c
.RI "spin_mutex \fBlibMesh::Threads::_pthread_unique_id_mutex\fP"
.br
.ti -1c
.RI "spin_mutex \fBlibMesh::Threads::spin_mtx\fP"
.br
.ti -1c
.RI "recursive_mutex \fBlibMesh::Threads::recursive_mtx\fP"
.br
.in -1c
.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
