.TH "libMesh::Singleton::Setup" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::Singleton::Setup \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <libmesh_singleton\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual \fB~Setup\fP ()"
.br
.ti -1c
.RI "virtual void \fBsetup\fP ()=0"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "\fBSetup\fP ()"
.br
.in -1c
.SH "Detailed Description"
.PP 
Abstract base class for runtime singleton setup\&. This will be called from the \fC\fBLibMeshInit\fP\fP constructor\&. 
.PP
Definition at line 50 of file libmesh_singleton\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "libMesh::Singleton::Setup::Setup ()\fC [protected]\fP"
Constructor\&. Adds the derived object to the setup cache list\&. 
.PP
Definition at line 73 of file libmesh_singleton\&.C\&.
.PP
.nf
74 {
75   get_setup_cache()\&.push_back (this);
76 }
.fi
.SS "virtual libMesh::Singleton::Setup::~Setup ()\fC [inline]\fP, \fC [virtual]\fP"
Destructor\&. 
.PP
Definition at line 62 of file libmesh_singleton\&.h\&.
.PP
.nf
62 {}
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual void libMesh::Singleton::Setup::setup ()\fC [pure virtual]\fP"
\fBSetup\fP method\&. Importantly, this is called \fIafter main()\fP from the \fC\fBLibMeshInit\fP\fP constructor\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
