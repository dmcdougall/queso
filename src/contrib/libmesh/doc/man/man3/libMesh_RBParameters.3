.TH "libMesh::RBParameters" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::RBParameters \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <rb_parameters\&.h>\fP
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef std::map< std::string, 
.br
\fBReal\fP >::\fBconst_iterator\fP \fBconst_iterator\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBRBParameters\fP ()"
.br
.ti -1c
.RI "\fBRBParameters\fP (const std::map< std::string, \fBReal\fP > &parameter_map)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "\fBReal\fP \fBget_value\fP (const std::string &param_name) const "
.br
.ti -1c
.RI "void \fBset_value\fP (const std::string &param_name, \fBReal\fP value)"
.br
.ti -1c
.RI "unsigned int \fBn_parameters\fP () const "
.br
.ti -1c
.RI "void \fBget_parameter_names\fP (std::set< std::string > &param_names) const "
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBbegin\fP () const "
.br
.ti -1c
.RI "\fBconst_iterator\fP \fBend\fP () const "
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBRBParameters\fP &rhs) const "
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBRBParameters\fP &node) const "
.br
.ti -1c
.RI "std::string \fBget_string\fP (unsigned int precision=6) const "
.br
.ti -1c
.RI "void \fBprint\fP () const "
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "std::map< std::string, \fBReal\fP > \fB_parameters\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class is part of the rbOOmit framework\&.
.PP
This class defines a set of parameters index by strings\&.
.PP
\fBAuthor:\fP
.RS 4
David J\&. Knezevic, 2012 
.RE
.PP

.PP
Definition at line 43 of file rb_parameters\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::map<std::string, \fBReal\fP>::\fBconst_iterator\fP \fBlibMesh::RBParameters::const_iterator\fP"

.PP
Definition at line 58 of file rb_parameters\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "libMesh::RBParameters::RBParameters ()"
Constructor\&. 
.SS "libMesh::RBParameters::RBParameters (const std::map< std::string, \fBReal\fP > &parameter_map)"
Constructor\&. Set parameters based on the std::map \fCparameter_map\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBconst_iterator\fP libMesh::RBParameters::begin () const"
Get a constant iterator to beginning of this \fBRBParameters\fP object\&. 
.SS "void libMesh::RBParameters::clear ()"
Clear this object\&. 
.SS "\fBconst_iterator\fP libMesh::RBParameters::end () const"
Get a constant iterator to the end of this \fBRBParameters\fP object\&. 
.SS "void libMesh::RBParameters::get_parameter_names (std::set< std::string > &param_names) const"
Fill \fCparam_names\fP with the names of the parameters\&. 
.SS "std::string libMesh::RBParameters::get_string (unsigned intprecision = \fC6\fP) const"
Get a string that specifies the contents of this \fBRBParameters\fP object\&. \fCprecision\fP specifies the number of digits of precision we use in scientific notation in the string\&. 
.SS "\fBReal\fP libMesh::RBParameters::get_value (const std::string &param_name) const"
Get the value of the specific parameter\&. 
.SS "unsigned int libMesh::RBParameters::n_parameters () const"
Get the number of parameters that have been added\&. 
.SS "bool libMesh::RBParameters::operator!= (const \fBRBParameters\fP &node) const"

.PP
\fBReturns:\fP
.RS 4
!(*this == rhs)\&. 
.RE
.PP

.SS "bool libMesh::RBParameters::operator== (const \fBRBParameters\fP &rhs) const"
Two \fBRBParameters\fP are equal if they have the same _parameters map\&. 
.SS "void libMesh::RBParameters::print () const"
Print the parameters\&. 
.SS "void libMesh::RBParameters::set_value (const std::string &param_name, \fBReal\fPvalue)"
Set the value of the specified parameter\&. If param_name doesn't already exist, it is added to the \fBRBParameters\fP object\&. 
.SH "Member Data Documentation"
.PP 
.SS "std::map<std::string, \fBReal\fP> libMesh::RBParameters::_parameters\fC [private]\fP"
The map that stores the actual parameters, indexed by names\&. 
.PP
Definition at line 123 of file rb_parameters\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
