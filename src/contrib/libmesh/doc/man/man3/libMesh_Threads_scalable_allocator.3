.TH "libMesh::Threads::scalable_allocator< T >" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::Threads::scalable_allocator< T > \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <threads_allocators\&.h>\fP
.PP
Inherits allocator< T >, and scalable_allocator< T >\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBrebind\fP"
.br
.in -1c
.SS "Public Types"

.in +1c
.ti -1c
.RI "typedef T * \fBpointer\fP"
.br
.ti -1c
.RI "typedef const T * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.ti -1c
.RI "typedef T * \fBpointer\fP"
.br
.ti -1c
.RI "typedef const T * \fBconst_pointer\fP"
.br
.ti -1c
.RI "typedef T \fBvalue_type\fP"
.br
.ti -1c
.RI "typedef size_t \fBsize_type\fP"
.br
.ti -1c
.RI "typedef ptrdiff_t \fBdifference_type\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBscalable_allocator\fP ()"
.br
.ti -1c
.RI "\fBscalable_allocator\fP (const \fBscalable_allocator\fP &a)"
.br
.ti -1c
.RI "template<typename U > \fBscalable_allocator\fP (const \fBscalable_allocator\fP< U > &a)"
.br
.ti -1c
.RI "\fBscalable_allocator\fP ()"
.br
.ti -1c
.RI "\fBscalable_allocator\fP (const \fBscalable_allocator\fP &a)"
.br
.ti -1c
.RI "template<typename U > \fBscalable_allocator\fP (const \fBscalable_allocator\fP< U > &a)"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<typename T>class libMesh::Threads::scalable_allocator< T >"
Scalable allocator to be used in multithreaded code chunks which allocate a lot of dynamic memory\&. This allocator can be faster than the std::allocator when there are multiple threads\&.
.PP
Just use std::allocator when the Threading Building Blocks is absent\&. 
.PP
Definition at line 54 of file threads_allocators\&.h\&.
.SH "Member Typedef Documentation"
.PP 
.SS "template<typename T> typedef const T* \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBconst_pointer\fP"

.PP
Definition at line 58 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef const T* \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBconst_pointer\fP"

.PP
Definition at line 97 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef ptrdiff_t \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBdifference_type\fP"

.PP
Definition at line 63 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef ptrdiff_t \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBdifference_type\fP"

.PP
Definition at line 102 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef T* \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBpointer\fP"

.PP
Definition at line 57 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef T* \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBpointer\fP"

.PP
Definition at line 96 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef size_t \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBsize_type\fP"

.PP
Definition at line 62 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef size_t \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBsize_type\fP"

.PP
Definition at line 101 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef T \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBvalue_type\fP"

.PP
Definition at line 61 of file threads_allocators\&.h\&.
.SS "template<typename T> typedef T \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBvalue_type\fP"

.PP
Definition at line 100 of file threads_allocators\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<typename T> \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBscalable_allocator\fP ()\fC [inline]\fP"

.PP
Definition at line 71 of file threads_allocators\&.h\&.
.PP
.nf
71                         :
72     tbb::scalable_allocator<T>() {}
.fi
.SS "template<typename T> \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBscalable_allocator\fP (const \fBscalable_allocator\fP< T > &a)\fC [inline]\fP"

.PP
Definition at line 74 of file threads_allocators\&.h\&.
.PP
.nf
74                                                    :
75     tbb::scalable_allocator<T>(a) {}
.fi
.SS "template<typename T> template<typename U > \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBscalable_allocator\fP (const \fBscalable_allocator\fP< U > &a)\fC [inline]\fP"

.PP
Definition at line 78 of file threads_allocators\&.h\&.
.PP
.nf
78                                                      :
79     tbb::scalable_allocator<T>(a) {}
.fi
.SS "template<typename T> \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBscalable_allocator\fP ()\fC [inline]\fP"

.PP
Definition at line 110 of file threads_allocators\&.h\&.
.PP
.nf
110                         :
111     std::allocator<T>() {}
.fi
.SS "template<typename T> \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBscalable_allocator\fP (const \fBscalable_allocator\fP< T > &a)\fC [inline]\fP"

.PP
Definition at line 113 of file threads_allocators\&.h\&.
.PP
.nf
113                                                    :
114     std::allocator<T>(a) {}
.fi
.SS "template<typename T> template<typename U > \fBlibMesh::Threads::scalable_allocator\fP< T >::\fBscalable_allocator\fP (const \fBscalable_allocator\fP< U > &a)\fC [inline]\fP"

.PP
Definition at line 117 of file threads_allocators\&.h\&.
.PP
.nf
117                                                      :
118     std::allocator<T>(a) {}
.fi


.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
