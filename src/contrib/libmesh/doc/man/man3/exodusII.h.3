.TH "exodusII.h" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
exodusII.h \- 
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBex_init_params\fP"
.br
.ti -1c
.RI "struct \fBex_block\fP"
.br
.ti -1c
.RI "struct \fBex_set\fP"
.br
.ti -1c
.RI "struct \fBex_block_params\fP"
.br
.ti -1c
.RI "struct \fBex_set_specs\fP"
.br
.ti -1c
.RI "struct \fBex_var_params\fP"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef enum \fBex_inquiry\fP \fBex_inquiry\fP"
.br
.ti -1c
.RI "typedef enum \fBex_option_type\fP \fBex_option_type\fP"
.br
.ti -1c
.RI "typedef enum \fBex_entity_type\fP \fBex_entity_type\fP"
.br
.ti -1c
.RI "typedef enum \fBex_options\fP \fBex_options\fP"
.br
.ti -1c
.RI "typedef int64_t \fBex_entity_id\fP"
.br
.ti -1c
.RI "typedef void \fBvoid_int\fP"
.br
.ti -1c
.RI "typedef struct \fBex_init_params\fP \fBex_init_params\fP"
.br
.ti -1c
.RI "typedef struct \fBex_block\fP \fBex_block\fP"
.br
.ti -1c
.RI "typedef struct \fBex_set\fP \fBex_set\fP"
.br
.ti -1c
.RI "typedef struct \fBex_block_params\fP \fBex_block_params\fP"
.br
.ti -1c
.RI "typedef struct \fBex_set_specs\fP \fBex_set_specs\fP"
.br
.ti -1c
.RI "typedef struct \fBex_var_params\fP \fBex_var_params\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBex_inquiry\fP { \fBEX_INQ_FILE_TYPE\fP = 1, \fBEX_INQ_API_VERS\fP = 2, \fBEX_INQ_DB_VERS\fP = 3, \fBEX_INQ_TITLE\fP = 4, \fBEX_INQ_DIM\fP = 5, \fBEX_INQ_NODES\fP = 6, \fBEX_INQ_ELEM\fP = 7, \fBEX_INQ_ELEM_BLK\fP = 8, \fBEX_INQ_NODE_SETS\fP = 9, \fBEX_INQ_NS_NODE_LEN\fP = 10, \fBEX_INQ_SIDE_SETS\fP = 11, \fBEX_INQ_SS_NODE_LEN\fP = 12, \fBEX_INQ_SS_ELEM_LEN\fP = 13, \fBEX_INQ_QA\fP = 14, \fBEX_INQ_INFO\fP = 15, \fBEX_INQ_TIME\fP = 16, \fBEX_INQ_EB_PROP\fP = 17, \fBEX_INQ_NS_PROP\fP = 18, \fBEX_INQ_SS_PROP\fP = 19, \fBEX_INQ_NS_DF_LEN\fP = 20, \fBEX_INQ_SS_DF_LEN\fP = 21, \fBEX_INQ_LIB_VERS\fP = 22, \fBEX_INQ_EM_PROP\fP = 23, \fBEX_INQ_NM_PROP\fP = 24, \fBEX_INQ_ELEM_MAP\fP = 25, \fBEX_INQ_NODE_MAP\fP = 26, \fBEX_INQ_EDGE\fP = 27, \fBEX_INQ_EDGE_BLK\fP = 28, \fBEX_INQ_EDGE_SETS\fP = 29, \fBEX_INQ_ES_LEN\fP = 30, \fBEX_INQ_ES_DF_LEN\fP = 31, \fBEX_INQ_EDGE_PROP\fP = 32, \fBEX_INQ_ES_PROP\fP = 33, \fBEX_INQ_FACE\fP = 34, \fBEX_INQ_FACE_BLK\fP = 35, \fBEX_INQ_FACE_SETS\fP = 36, \fBEX_INQ_FS_LEN\fP = 37, \fBEX_INQ_FS_DF_LEN\fP = 38, \fBEX_INQ_FACE_PROP\fP = 39, \fBEX_INQ_FS_PROP\fP = 40, \fBEX_INQ_ELEM_SETS\fP = 41, \fBEX_INQ_ELS_LEN\fP = 42, \fBEX_INQ_ELS_DF_LEN\fP = 43, \fBEX_INQ_ELS_PROP\fP = 44, \fBEX_INQ_EDGE_MAP\fP = 45, \fBEX_INQ_FACE_MAP\fP = 46, \fBEX_INQ_COORD_FRAMES\fP = 47, \fBEX_INQ_DB_MAX_ALLOWED_NAME_LENGTH\fP = 48, \fBEX_INQ_DB_MAX_USED_NAME_LENGTH\fP = 49, \fBEX_INQ_MAX_READ_NAME_LENGTH\fP = 50, \fBEX_INQ_INVALID\fP = -1 }"
.br
.ti -1c
.RI "enum \fBex_option_type\fP { \fBEX_OPT_MAX_NAME_LENGTH\fP = 1, \fBEX_OPT_COMPRESSION_TYPE\fP, \fBEX_OPT_COMPRESSION_LEVEL\fP, \fBEX_OPT_COMPRESSION_SHUFFLE\fP, \fBEX_OPT_INTEGER_SIZE_API\fP, \fBEX_OPT_INTEGER_SIZE_DB\fP }"
.br
.ti -1c
.RI "enum \fBex_entity_type\fP { \fBEX_NODAL\fP = 14, \fBEX_NODE_BLOCK\fP = 14, \fBEX_NODE_SET\fP = 2, \fBEX_EDGE_BLOCK\fP = 6, \fBEX_EDGE_SET\fP = 7, \fBEX_FACE_BLOCK\fP = 8, \fBEX_FACE_SET\fP = 9, \fBEX_ELEM_BLOCK\fP = 1, \fBEX_ELEM_SET\fP = 10, \fBEX_SIDE_SET\fP = 3, \fBEX_ELEM_MAP\fP = 4, \fBEX_NODE_MAP\fP = 5, \fBEX_EDGE_MAP\fP = 11, \fBEX_FACE_MAP\fP = 12, \fBEX_GLOBAL\fP = 13, \fBEX_COORDINATE\fP = 15, \fBEX_INVALID\fP = -1 }"
.br
.ti -1c
.RI "enum \fBex_options\fP { \fBEX_DEFAULT\fP = 0, \fBEX_VERBOSE\fP = 1, \fBEX_DEBUG\fP = 2, \fBEX_ABORT\fP = 4 }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "EXODUS_EXPORT int \fBex_close\fP (int exoid)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_copy\fP (int in_exoid, int out_exoid)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_create_int\fP (const char *path, int cmode, int *comp_ws, int *io_ws, int my_version)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_all_times\fP (int exoid, void *time_values)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_coord_names\fP (int exoid, char **coord_names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_coord\fP (int exoid, void *x_coor, void *y_coor, void *z_coor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_coord\fP (int exoid, int64_t start_node_num, int64_t num_nodes, void *x_coor, void *y_coor, void *z_coor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_ids\fP (int exoid, \fBex_entity_type\fP obj_type, \fBvoid_int\fP *ids)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_coordinate_frames\fP (int exoid, int *nframes, \fBvoid_int\fP *cf_ids, void *pt_coordinates, char *tags)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_glob_vars\fP (int exoid, int time_step, int num_glob_vars, void *glob_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_glob_var_time\fP (int exoid, int glob_var_index, int beg_time_step, int end_time_step, void *glob_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_info\fP (int exoid, char **info)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_init_ext\fP (int exoid, const \fBex_init_params\fP *param)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_init_ext\fP (int exoid, \fBex_init_params\fP *param)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_init\fP (int exoid, char *title, \fBvoid_int\fP *num_dim, \fBvoid_int\fP *num_nodes, \fBvoid_int\fP *num_elem, \fBvoid_int\fP *num_elem_blk, \fBvoid_int\fP *num_node_sets, \fBvoid_int\fP *num_side_sets)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_init\fP (int exoid, const char *title, int64_t num_dim, int64_t num_nodes, int64_t num_elem, int64_t num_elem_blk, int64_t num_node_sets, int64_t num_side_sets)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_map_param\fP (int exoid, int *num_node_maps, int *num_elem_maps)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_name\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP entity_id, char *name)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_names\fP (int exoid, \fBex_entity_type\fP obj_type, char **names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_nset_var_tab\fP (int exoid, int num_nodesets, int num_nset_var, int *nset_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_nodal_var\fP (int exoid, int time_step, int nodal_var_index, int64_t start_node, int64_t num_nodes, void *nodal_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_prop_array\fP (int exoid, \fBex_entity_type\fP obj_type, const char *prop_name, \fBvoid_int\fP *values)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_prop\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, const char *prop_name, \fBvoid_int\fP *value)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_partial_num_map\fP (int exoid, \fBex_entity_type\fP map_type, \fBex_entity_id\fP map_id, int64_t ent_start, int64_t ent_count, \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_prop_names\fP (int exoid, \fBex_entity_type\fP obj_type, char **prop_names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_qa\fP (int exoid, char *qa_record[][4])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_time\fP (int exoid, int time_step, void *time_value)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_variable_names\fP (int exoid, \fBex_entity_type\fP obj_type, int num_vars, char *var_names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_variable_name\fP (int exoid, \fBex_entity_type\fP obj_type, int var_num, char *var_name)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_variable_param\fP (int exoid, \fBex_entity_type\fP obj_type, int *num_vars)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_object_truth_vector\fP (int exoid, \fBex_entity_type\fP var_type, \fBex_entity_id\fP object_id, int num_var, int *var_vector)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_truth_table\fP (int exoid, \fBex_entity_type\fP obj_type, int num_blk, int num_var, int *var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_open_int\fP (const char *path, int mode, int *comp_ws, int *io_ws, float *version, int my_version)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_attr_param\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, int num_attrs)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_attr_param\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, int *num_attrs)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_all_var_param\fP (int exoid, int num_g, int num_n, int num_e, int *elem_var_tab, int num_m, int *nset_var_tab, int num_s, int *sset_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_concat_elem_block\fP (int exoid, const \fBvoid_int\fP *elem_blk_id, char *elem_type[], const \fBvoid_int\fP *num_elem_this_blk, const \fBvoid_int\fP *num_nodes_per_elem, const \fBvoid_int\fP *num_attr, int define_maps)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_coord_names\fP (int exoid, char *coord_names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_coord\fP (int exoid, const void *x_coor, const void *y_coor, const void *z_coor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_coord\fP (int exoid, int64_t start_node_num, int64_t num_nodes, const void *x_coor, const void *y_coor, const void *z_coor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_id_map\fP (int exoid, \fBex_entity_type\fP obj_type, const \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_partial_id_map\fP (int exoid, \fBex_entity_type\fP obj_type, int64_t start_entity_num, int64_t num_entities, const \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_elem_num_map\fP (int exoid, int64_t start_ent, int64_t num_ents, const \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_node_num_map\fP (int exoid, int64_t start_ent, int64_t num_ents, const \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_id_map\fP (int exoid, \fBex_entity_type\fP obj_type, \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_coordinate_frames\fP (int exoid, int nframes, const \fBvoid_int\fP *cf_ids, void *pt_coordinates, const char *tags)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_info\fP (int exoid, int num_info, char *info[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_map_param\fP (int exoid, int num_node_maps, int num_elem_maps)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_name\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP entity_id, const char *name)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_names\fP (int exoid, \fBex_entity_type\fP obj_type, char *names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_one_attr\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, int64_t start_num, int64_t num_ent, int attrib_index, const void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_prop\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, const char *prop_name, \fBex_entity_id\fP value)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_prop_array\fP (int exoid, \fBex_entity_type\fP obj_type, const char *prop_name, const \fBvoid_int\fP *values)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_prop_names\fP (int exoid, \fBex_entity_type\fP obj_type, int num_props, char **prop_names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_qa\fP (int exoid, int num_qa_records, char *qa_record[][4])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_time\fP (int exoid, int time_step, const void *time_value)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_variable_name\fP (int exoid, \fBex_entity_type\fP obj_type, int var_num, const char *var_name)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_variable_names\fP (int exoid, \fBex_entity_type\fP obj_type, int num_vars, char *var_names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_variable_param\fP (int exoid, \fBex_entity_type\fP obj_type, int num_vars)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_truth_table\fP (int exoid, \fBex_entity_type\fP obj_type, int num_blk, int num_var, int *var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_update\fP (int exoid)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_num_props\fP (int exoid, \fBex_entity_type\fP obj_type)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_large_model\fP (int exoid)"
.br
.ti -1c
.RI "EXODUS_EXPORT size_t \fBex_header_size\fP (int exoid)"
.br
.ti -1c
.RI "EXODUS_EXPORT void \fBex_err\fP (const char *module_name, const char *message, int err_num)"
.br
.ti -1c
.RI "EXODUS_EXPORT void \fBex_get_err\fP (const char **msg, const char **func, int *errcode)"
.br
.ti -1c
.RI "EXODUS_EXPORT void \fBex_opts\fP (int options)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_inquire\fP (int exoid, int inquiry, \fBvoid_int\fP *, float *, char *)"
.br
.ti -1c
.RI "EXODUS_EXPORT int64_t \fBex_inquire_int\fP (int exoid, int inquiry)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_int64_status\fP (int exoid)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_set_int64_status\fP (int exoid, int mode)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_set_max_name_length\fP (int exoid, int length)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_set_option\fP (int exoid, \fBex_option_type\fP option, int option_value)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_num_map\fP (int exoid, \fBex_entity_type\fP map_type, \fBex_entity_id\fP map_id, const \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_num_map\fP (int exoid, \fBex_entity_type\fP map_type, \fBex_entity_id\fP map_id, \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_block\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, const char *entry_descrip, int64_t num_entries_this_blk, int64_t num_nodes_per_entry, int64_t num_edges_per_entry, int64_t num_faces_per_entry, int64_t num_attr_per_entry)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_block\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, char *elem_type, \fBvoid_int\fP *num_entries_this_blk, \fBvoid_int\fP *num_nodes_per_entry, \fBvoid_int\fP *num_edges_per_entry, \fBvoid_int\fP *num_faces_per_entry, \fBvoid_int\fP *num_attr_per_entry)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_block_param\fP (int exoid, \fBex_block\fP *block)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_block_param\fP (int exoid, const \fBex_block\fP block)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_concat_all_blocks\fP (int exoid, const \fBex_block_params\fP *param)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_entity_count_per_polyhedra\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, const int *entity_counts)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_entity_count_per_polyhedra\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, int *entity_counts)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_conn\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, const \fBvoid_int\fP *node_conn, const \fBvoid_int\fP *elem_edge_conn, const \fBvoid_int\fP *elem_face_conn)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_conn\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, \fBvoid_int\fP *nodeconn, \fBvoid_int\fP *edgeconn, \fBvoid_int\fP *faceconn)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_conn\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, int64_t start_num, int64_t num_ent, \fBvoid_int\fP *nodeconn, \fBvoid_int\fP *edgeconn, \fBvoid_int\fP *faceconn)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_attr\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, const void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_attr\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_one_attr\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, int attrib_index, const void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_one_attr\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, int attrib_index, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_one_attr\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, int64_t start_num, int64_t num_ent, int attrib_index, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_attr_names\fP (int exoid, \fBex_entity_type\fP blk_type, \fBex_entity_id\fP blk_id, char **names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_attr_names\fP (int exoid, \fBex_entity_type\fP obj_type, \fBex_entity_id\fP obj_id, char **names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_set_param\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, int64_t num_entries_in_set, int64_t num_dist_fact_in_set)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_set_param\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, \fBvoid_int\fP *num_entry_in_set, \fBvoid_int\fP *num_dist_fact_in_set)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_set\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, const \fBvoid_int\fP *set_entry_list, const \fBvoid_int\fP *set_extra_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_set\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, \fBvoid_int\fP *set_entry_list, \fBvoid_int\fP *set_extra_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_set_dist_fact\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, const void *set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_set_dist_fact\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, void *set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_concat_sets\fP (int exoid, \fBex_entity_type\fP set_type, const struct \fBex_set_specs\fP *set_specs)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_concat_sets\fP (int exoid, \fBex_entity_type\fP set_type, struct \fBex_set_specs\fP *set_specs)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_sets\fP (int exoid, size_t set_count, const struct \fBex_set\fP *sets)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_sets\fP (int exoid, size_t set_count, struct \fBex_set\fP *sets)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_all_var_param_ext\fP (int exoid, const \fBex_var_params\fP *vp)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_var\fP (int exoid, int time_step, \fBex_entity_type\fP var_type, int var_index, \fBex_entity_id\fP obj_id, int64_t num_entries_this_obj, const void *var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_var\fP (int exoid, int time_step, \fBex_entity_type\fP var_type, int var_index, \fBex_entity_id\fP obj_id, int64_t start_index, int64_t num_entities, const void *var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_var\fP (int exoid, int time_step, \fBex_entity_type\fP var_type, int var_index, \fBex_entity_id\fP obj_id, int64_t num_entry_this_obj, void *var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_var\fP (int exoid, int time_step, \fBex_entity_type\fP var_type, int var_index, \fBex_entity_id\fP obj_id, int64_t start_index, int64_t num_entities, void *var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_elem_var\fP (int exoid, int time_step, int elem_var_index, \fBex_entity_id\fP elem_blk_id, int64_t num_elem_this_blk, int64_t start_elem_num, int64_t num_elem, void *elem_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_var_time\fP (int exoid, \fBex_entity_type\fP var_type, int var_index, int64_t id, int beg_time_step, int end_time_step, void *var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_cvt_nodes_to_sides\fP (int exoid, \fBvoid_int\fP *num_elem_per_set, \fBvoid_int\fP *num_nodes_per_set, \fBvoid_int\fP *side_sets_elem_index, \fBvoid_int\fP *side_sets_node_index, \fBvoid_int\fP *side_sets_elem_list, \fBvoid_int\fP *side_sets_node_list, \fBvoid_int\fP *side_sets_side_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_nodal_var\fP (int exoid, int time_step, int nodal_var_index, int64_t num_nodes, const void *nodal_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_nodal_var\fP (int exoid, int time_step, int nodal_var_index, int64_t start_node, int64_t num_nodes, const void *nodal_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_partial_elem_map\fP (int exoid, \fBex_entity_id\fP map_id, int64_t ent_start, int64_t ent_count, \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_partial_elem_map\fP (int exoid, \fBex_entity_id\fP map_id, int64_t ent_start, int64_t ent_count, const \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_partial_num_map\fP (int exoid, \fBex_entity_type\fP map_type, \fBex_entity_id\fP map_id, int64_t ent_start, int64_t ent_count, const \fBvoid_int\fP *map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_partial_set_dist_fact\fP (int exoid, \fBex_entity_type\fP set_type, \fBex_entity_id\fP set_id, int64_t offset, int64_t num_to_put, const void *set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_concat_side_set_node_count\fP (int exoid, int *side_set_node_cnt_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set_node_list_len\fP (int exoid, \fBex_entity_id\fP side_set_id, \fBvoid_int\fP *side_set_node_list_len)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set_node_count\fP (int exoid, \fBex_entity_id\fP side_set_id, int *side_set_node_cnt_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set_node_list\fP (int exoid, \fBex_entity_id\fP side_set_id, \fBvoid_int\fP *side_set_node_cnt_list, \fBvoid_int\fP *side_set_node_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_init_info\fP (int exoid, int *num_proc, int *num_proc_in_f, char *ftype)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_init_info\fP (int exoid, int num_proc, int num_proc_in_f, char *ftype)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_init_global\fP (int exoid, \fBvoid_int\fP *num_nodes_g, \fBvoid_int\fP *num_elems_g, \fBvoid_int\fP *num_elem_blks_g, \fBvoid_int\fP *num_node_sets_g, \fBvoid_int\fP *num_side_sets_g)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_init_global\fP (int exoid, int64_t num_nodes_g, int64_t num_elems_g, int64_t num_elem_blks_g, int64_t num_node_sets_g, int64_t num_side_sets_g)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_loadbal_param\fP (int exoid, \fBvoid_int\fP *num_int_nodes, \fBvoid_int\fP *num_bor_nodes, \fBvoid_int\fP *num_ext_nodes, \fBvoid_int\fP *num_int_elems, \fBvoid_int\fP *num_bor_elems, \fBvoid_int\fP *num_node_cmaps, \fBvoid_int\fP *num_elem_cmaps, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_loadbal_param\fP (int exoid, int64_t num_int_nodes, int64_t num_bor_nodes, int64_t num_ext_nodes, int64_t num_int_elems, int64_t num_bor_elems, int64_t num_node_cmaps, int64_t num_elem_cmaps, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_loadbal_param_cc\fP (int exoid, \fBvoid_int\fP *num_int_nodes, \fBvoid_int\fP *num_bor_nodes, \fBvoid_int\fP *num_ext_nodes, \fBvoid_int\fP *num_int_elems, \fBvoid_int\fP *num_bor_elems, \fBvoid_int\fP *num_node_cmaps, \fBvoid_int\fP *num_elem_cmaps)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_ns_param_global\fP (int exoid, \fBvoid_int\fP *ns_ids_glob, \fBvoid_int\fP *ns_n_cnt_glob, \fBvoid_int\fP *ns_df_cnt_glob)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_ns_param_global\fP (int exoid, \fBvoid_int\fP *global_ids, \fBvoid_int\fP *global_n_cnts, \fBvoid_int\fP *global_df_cnts)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_ss_param_global\fP (int exoid, \fBvoid_int\fP *ss_ids_glob, \fBvoid_int\fP *ss_s_cnt_glob, \fBvoid_int\fP *ss_df_cnt_glob)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_ss_param_global\fP (int exoid, \fBvoid_int\fP *global_ids, \fBvoid_int\fP *global_el_cnts, \fBvoid_int\fP *global_df_cnts)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_eb_info_global\fP (int exoid, \fBvoid_int\fP *el_blk_ids, \fBvoid_int\fP *el_blk_cnts)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_eb_info_global\fP (int exoid, \fBvoid_int\fP *el_blk_ids, \fBvoid_int\fP *el_blk_cnts)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_side_set\fP (int exoid, \fBex_entity_id\fP side_set_id, int64_t start_side_num, int64_t num_sides, \fBvoid_int\fP *side_set_elem_list, \fBvoid_int\fP *side_set_side_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_side_set\fP (int exoid, \fBex_entity_id\fP side_set_id, int64_t start_side_num, int64_t num_sides, const \fBvoid_int\fP *side_set_elem_list, const \fBvoid_int\fP *side_set_side_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_side_set_df\fP (int exoid, \fBex_entity_id\fP side_set_id, int64_t start_num, int64_t num_df_to_get, void *side_set_df)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_side_set_df\fP (int exoid, \fBex_entity_id\fP side_set_id, int64_t start_num, int64_t num_df_to_get, void *side_set_df)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_node_set\fP (int exoid, \fBex_entity_id\fP node_set_id, int64_t start_node_num, int64_t num_node, \fBvoid_int\fP *node_set_node_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_node_set\fP (int exoid, \fBex_entity_id\fP node_set_id, int64_t start_node_num, int64_t num_node, const \fBvoid_int\fP *node_set_node_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_node_set_df\fP (int exoid, \fBex_entity_id\fP node_set_id, int64_t start_num, int64_t num_df_to_get, void *node_set_df)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_node_set_df\fP (int exoid, \fBex_entity_id\fP node_set_id, int64_t start_num, int64_t num_df_to_get, void *node_set_df)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_elem_conn\fP (int exoid, \fBex_entity_id\fP elem_blk_id, int64_t start_elem_num, int64_t num_elems, \fBvoid_int\fP *connect)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_elem_conn\fP (int exoid, \fBex_entity_id\fP elem_blk_id, int64_t start_elem_num, int64_t num_elems, const \fBvoid_int\fP *connect)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_elem_attr\fP (int exoid, \fBex_entity_id\fP elem_blk_id, int64_t start_elem_num, int64_t num_elems, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_n_elem_attr\fP (int exoid, \fBex_entity_id\fP elem_blk_id, int64_t start_elem_num, int64_t num_elems, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_type\fP (int exoid, \fBex_entity_id\fP elem_blk_id, char *elem_type)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_var_slab\fP (int exoid, int time_step, int elem_var_index, \fBex_entity_id\fP elem_blk_id, int64_t start_pos, int64_t num_vals, void *elem_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_nodal_var_slab\fP (int exoid, int time_step, int nodal_var_index, int64_t start_pos, int64_t num_vals, void *nodal_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_elem_num_map\fP (int exoid, int64_t start_ent, int64_t num_ents, \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_n_node_num_map\fP (int exoid, int64_t start_ent, int64_t num_ents, \fBvoid_int\fP *node_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_processor_node_maps\fP (int exoid, \fBvoid_int\fP *node_mapi, \fBvoid_int\fP *node_mapb, \fBvoid_int\fP *node_mape, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_processor_node_maps\fP (int exoid, \fBvoid_int\fP *node_mapi, \fBvoid_int\fP *node_mapb, \fBvoid_int\fP *node_mape, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_processor_elem_maps\fP (int exoid, \fBvoid_int\fP *elem_mapi, \fBvoid_int\fP *elem_mapb, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_processor_elem_maps\fP (int exoid, \fBvoid_int\fP *elem_mapi, \fBvoid_int\fP *elem_mapb, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_cmap_params\fP (int exoid, \fBvoid_int\fP *node_cmap_ids, \fBvoid_int\fP *node_cmap_node_cnts, \fBvoid_int\fP *elem_cmap_ids, \fBvoid_int\fP *elem_cmap_elem_cnts, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_cmap_params\fP (int exoid, \fBvoid_int\fP *node_map_ids, \fBvoid_int\fP *node_map_node_cnts, \fBvoid_int\fP *elem_map_ids, \fBvoid_int\fP *elem_map_elem_cnts, int64_t processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_cmap_params_cc\fP (int exoid, \fBvoid_int\fP *node_map_ids, \fBvoid_int\fP *node_map_node_cnts, \fBvoid_int\fP *node_proc_ptrs, \fBvoid_int\fP *elem_map_ids, \fBvoid_int\fP *elem_map_elem_cnts, \fBvoid_int\fP *elem_proc_ptrs)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_cmap\fP (int exoid, \fBex_entity_id\fP map_id, \fBvoid_int\fP *node_ids, \fBvoid_int\fP *proc_ids, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_node_cmap\fP (int exoid, \fBex_entity_id\fP map_id, \fBvoid_int\fP *node_ids, \fBvoid_int\fP *proc_ids, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_cmap\fP (int exoid, \fBex_entity_id\fP map_id, \fBvoid_int\fP *elem_ids, \fBvoid_int\fP *side_ids, \fBvoid_int\fP *proc_ids, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_cmap\fP (int exoid, \fBex_entity_id\fP map_id, \fBvoid_int\fP *elem_ids, \fBvoid_int\fP *side_ids, \fBvoid_int\fP *proc_ids, int processor)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_nodal_var\fP (int exoid, int time_step, int nodal_var_index, int64_t num_nodes, void *nodal_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_nodal_var_time\fP (int exoid, int nodal_var_index, int64_t node_number, int beg_time_step, int end_time_step, void *nodal_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_concat_node_sets\fP (int exoid, \fBvoid_int\fP *node_set_ids, \fBvoid_int\fP *num_nodes_per_set, \fBvoid_int\fP *num_df_per_set, \fBvoid_int\fP *node_sets_node_index, \fBvoid_int\fP *node_sets_df_index, \fBvoid_int\fP *node_sets_node_list, void *node_sets_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_concat_side_sets\fP (int exoid, \fBvoid_int\fP *side_set_ids, \fBvoid_int\fP *num_elem_per_set, \fBvoid_int\fP *num_dist_per_set, \fBvoid_int\fP *side_sets_elem_index, \fBvoid_int\fP *side_sets_dist_index, \fBvoid_int\fP *side_sets_elem_list, \fBvoid_int\fP *side_sets_side_list, void *side_sets_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_attr\fP (int exoid, \fBex_entity_id\fP elem_blk_id, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_attr_names\fP (int exoid, \fBex_entity_id\fP elem_blk_id, char **names)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_blk_ids\fP (int exoid, \fBvoid_int\fP *ids)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_block\fP (int exoid, \fBex_entity_id\fP elem_blk_id, char *elem_type, \fBvoid_int\fP *num_elem_this_blk, \fBvoid_int\fP *num_nodes_per_elem, \fBvoid_int\fP *num_attr)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_conn\fP (int exoid, \fBex_entity_id\fP elem_blk_id, \fBvoid_int\fP *connect)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_map\fP (int exoid, \fBex_entity_id\fP map_id, \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_num_map\fP (int exoid, \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_var\fP (int exoid, int time_step, int elem_var_index, \fBex_entity_id\fP elem_blk_id, int64_t num_elem_this_blk, void *elem_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_var_tab\fP (int exoid, int num_elem_blk, int num_elem_var, int *elem_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_elem_var_time\fP (int exoid, int elem_var_index, int64_t elem_number, int beg_time_step, int end_time_step, void *elem_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_map\fP (int exoid, \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_map\fP (int exoid, \fBex_entity_id\fP map_id, \fBvoid_int\fP *node_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_num_map\fP (int exoid, \fBvoid_int\fP *node_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_set_param\fP (int exoid, \fBex_entity_id\fP node_set_id, \fBvoid_int\fP *num_nodes_in_set, \fBvoid_int\fP *num_df_in_set)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_set\fP (int exoid, \fBex_entity_id\fP node_set_id, \fBvoid_int\fP *node_set_node_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_set_dist_fact\fP (int exoid, \fBex_entity_id\fP node_set_id, void *node_set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_node_set_ids\fP (int exoid, \fBvoid_int\fP *ids)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_nset_var\fP (int exoid, int time_step, int nset_var_index, \fBex_entity_id\fP nset_id, int64_t num_node_this_nset, void *nset_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_one_elem_attr\fP (int exoid, \fBex_entity_id\fP elem_blk_id, int attrib_index, void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set\fP (int exoid, \fBex_entity_id\fP side_set_id, \fBvoid_int\fP *side_set_elem_list, \fBvoid_int\fP *side_set_side_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set_dist_fact\fP (int exoid, \fBex_entity_id\fP side_set_id, void *side_set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set_ids\fP (int exoid, \fBvoid_int\fP *ids)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_side_set_param\fP (int exoid, \fBex_entity_id\fP side_set_id, \fBvoid_int\fP *num_side_in_set, \fBvoid_int\fP *num_dist_fact_in_set)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_sset_var\fP (int exoid, int time_step, int sset_var_index, \fBex_entity_id\fP sset_id, int64_t num_side_this_sset, void *sset_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_sset_var_tab\fP (int exoid, int num_sidesets, int num_sset_var, int *sset_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_var_names\fP (int exoid, const char *var_type, int num_vars, char *var_names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_var_name\fP (int exoid, const char *var_type, int var_num, char *var_name)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_var_param\fP (int exoid, const char *var_type, int *num_vars)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_get_var_tab\fP (int exoid, const char *var_type, int num_blk, int num_var, int *var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_concat_node_sets\fP (int exoid, \fBvoid_int\fP *node_set_ids, \fBvoid_int\fP *num_nodes_per_set, \fBvoid_int\fP *num_dist_per_set, \fBvoid_int\fP *node_sets_node_index, \fBvoid_int\fP *node_sets_df_index, \fBvoid_int\fP *node_sets_node_list, void *node_sets_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_concat_side_sets\fP (int exoid, \fBvoid_int\fP *side_set_ids, \fBvoid_int\fP *num_elem_per_set, \fBvoid_int\fP *num_dist_per_set, \fBvoid_int\fP *side_sets_elem_index, \fBvoid_int\fP *side_sets_dist_index, \fBvoid_int\fP *side_sets_elem_list, \fBvoid_int\fP *side_sets_side_list, void *side_sets_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_concat_var_param\fP (int exoid, int num_g, int num_n, int num_e, int num_elem_blk, int *elem_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_attr_names\fP (int exoid, \fBex_entity_id\fP elem_blk_id, char *names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_attr\fP (int exoid, \fBex_entity_id\fP elem_blk_id, const void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_block\fP (int exoid, \fBex_entity_id\fP elem_blk_id, const char *elem_type, int64_t num_elem_this_blk, int64_t num_nodes_per_elem, int64_t num_attr)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_conn\fP (int exoid, \fBex_entity_id\fP elem_blk_id, const \fBvoid_int\fP *connect)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_map\fP (int exoid, \fBex_entity_id\fP map_id, const \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_num_map\fP (int exoid, const \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_var\fP (int exoid, int time_step, int elem_var_index, \fBex_entity_id\fP elem_blk_id, int64_t num_elem_this_blk, const void *elem_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_elem_var_tab\fP (int exoid, int num_elem_blk, int num_elem_var, int *elem_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_glob_vars\fP (int exoid, int time_step, int num_glob_vars, const void *glob_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_map\fP (int exoid, const \fBvoid_int\fP *elem_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_node_map\fP (int exoid, \fBex_entity_id\fP map_id, const \fBvoid_int\fP *node_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_node_num_map\fP (int exoid, const \fBvoid_int\fP *node_map)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_node_set\fP (int exoid, \fBex_entity_id\fP node_set_id, const \fBvoid_int\fP *node_set_node_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_node_set_dist_fact\fP (int exoid, \fBex_entity_id\fP node_set_id, const void *node_set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_node_set_param\fP (int exoid, \fBex_entity_id\fP node_set_id, int64_t num_nodes_in_set, int64_t num_dist_in_set)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_nset_var\fP (int exoid, int time_step, int nset_var_index, \fBex_entity_id\fP nset_id, int64_t num_nodes_this_nset, const void *nset_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_nset_var_tab\fP (int exoid, int num_nset, int num_nset_var, int *nset_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_one_elem_attr\fP (int exoid, \fBex_entity_id\fP elem_blk_id, int attrib_index, const void *attrib)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_side_set\fP (int exoid, \fBex_entity_id\fP side_set_id, const \fBvoid_int\fP *side_set_elem_list, const \fBvoid_int\fP *side_set_side_list)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_side_set_dist_fact\fP (int exoid, \fBex_entity_id\fP side_set_id, const void *side_set_dist_fact)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_side_set_param\fP (int exoid, \fBex_entity_id\fP side_set_id, int64_t num_side_in_set, int64_t num_dist_fact_in_set)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_sset_var\fP (int exoid, int time_step, int sset_var_index, \fBex_entity_id\fP sset_id, int64_t num_faces_this_sset, const void *sset_var_vals)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_sset_var_tab\fP (int exoid, int num_sset, int num_sset_var, int *sset_var_tab)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_var_name\fP (int exoid, const char *var_type, int var_num, const char *var_name)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_var_names\fP (int exoid, const char *var_type, int num_vars, char *var_names[])"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_var_param\fP (int exoid, const char *var_type, int num_vars)"
.br
.ti -1c
.RI "EXODUS_EXPORT int \fBex_put_var_tab\fP (int exoid, const char *var_type, int num_blk, int num_var, int *var_tab)"
.br
.ti -1c
.RI "char * \fBex_name_of_object\fP (\fBex_entity_type\fP obj_type)"
.br
.ti -1c
.RI "\fBex_entity_type\fP \fBex_var_type_to_ex_entity_type\fP (char var_type)"
.br
.ti -1c
.RI "int \fBex_get_idx\fP (int neid, const char *ne_var_name, int64_t *index, int pos)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "int \fBexerrval\fP"
.br
.ti -1c
.RI "int \fBexoptval\fP"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef int64_t \fBex_entity_id\fP"
Specifies that this argument is the id of an entity: element block, nodeset, sideset, \&.\&.\&. 
.PP
Definition at line 247 of file exodusII\&.h\&.
.SS "typedef enum \fBex_entity_type\fP \fBex_entity_type\fP"

.PP
Definition at line 212 of file exodusII\&.h\&.
.SS "typedef enum \fBex_inquiry\fP \fBex_inquiry\fP"

.PP
Definition at line 171 of file exodusII\&.h\&.
.SS "typedef enum \fBex_options\fP \fBex_options\fP"

.PP
Definition at line 223 of file exodusII\&.h\&.
.SS "typedef void \fBvoid_int\fP"
The mechanism for passing double/float and int/int64_t both use a void*; to avoid some confusion as to whether a function takes an integer or a float/double, the following typedef is used for the integer argument 
.PP
Definition at line 254 of file exodusII\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBex_entity_type\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIEX_NODAL \fP\fP
nodal 'block' for variables 
.TP
\fB\fIEX_NODE_BLOCK \fP\fP
alias for EX_NODAL 
.TP
\fB\fIEX_NODE_SET \fP\fP
node set property code 
.TP
\fB\fIEX_EDGE_BLOCK \fP\fP
edge block property code 
.TP
\fB\fIEX_EDGE_SET \fP\fP
edge set property code 
.TP
\fB\fIEX_FACE_BLOCK \fP\fP
face block property code 
.TP
\fB\fIEX_FACE_SET \fP\fP
face set property code 
.TP
\fB\fIEX_ELEM_BLOCK \fP\fP
element block property code 
.TP
\fB\fIEX_ELEM_SET \fP\fP
face set property code 
.TP
\fB\fIEX_SIDE_SET \fP\fP
side set property code 
.TP
\fB\fIEX_ELEM_MAP \fP\fP
element map property code 
.TP
\fB\fIEX_NODE_MAP \fP\fP
node map property code 
.TP
\fB\fIEX_EDGE_MAP \fP\fP
edge map property code 
.TP
\fB\fIEX_FACE_MAP \fP\fP
face map property code 
.TP
\fB\fIEX_GLOBAL \fP\fP
global 'block' for variables 
.TP
\fB\fIEX_COORDINATE \fP\fP
kluge so some internal wrapper functions work 
.TP
\fB\fIEX_INVALID \fP\fP
.PP
Definition at line 191 of file exodusII\&.h\&.
.PP
.nf
191                       {
192     EX_NODAL       = 14,          
193     EX_NODE_BLOCK  = 14,          
194     EX_NODE_SET    =  2,          
195     EX_EDGE_BLOCK  =  6,          
196     EX_EDGE_SET    =  7,          
197     EX_FACE_BLOCK  =  8,          
198     EX_FACE_SET    =  9,          
199     EX_ELEM_BLOCK  =  1,          
200     EX_ELEM_SET    = 10,          
202     EX_SIDE_SET    =  3,          
204     EX_ELEM_MAP    =  4,          
205     EX_NODE_MAP    =  5,          
206     EX_EDGE_MAP    = 11,          
207     EX_FACE_MAP    = 12,          
209     EX_GLOBAL      = 13,          
210     EX_COORDINATE  = 15,          
211     EX_INVALID     = -1};             
.fi
.SS "enum \fBex_inquiry\fP"

.PP
\fBSee Also:\fP
.RS 4
\fBex_inquire()\fP 
.RE
.PP

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIEX_INQ_FILE_TYPE \fP\fP
inquire EXODUS II file type 
.TP
\fB\fIEX_INQ_API_VERS \fP\fP
inquire API version number 
.TP
\fB\fIEX_INQ_DB_VERS \fP\fP
inquire database version number 
.TP
\fB\fIEX_INQ_TITLE \fP\fP
inquire database title 
.TP
\fB\fIEX_INQ_DIM \fP\fP
inquire number of dimensions 
.TP
\fB\fIEX_INQ_NODES \fP\fP
inquire number of nodes 
.TP
\fB\fIEX_INQ_ELEM \fP\fP
inquire number of elements 
.TP
\fB\fIEX_INQ_ELEM_BLK \fP\fP
inquire number of element blocks 
.TP
\fB\fIEX_INQ_NODE_SETS \fP\fP
inquire number of node sets 
.TP
\fB\fIEX_INQ_NS_NODE_LEN \fP\fP
inquire length of node set node list 
.TP
\fB\fIEX_INQ_SIDE_SETS \fP\fP
inquire number of side sets 
.TP
\fB\fIEX_INQ_SS_NODE_LEN \fP\fP
inquire length of side set node list 
.TP
\fB\fIEX_INQ_SS_ELEM_LEN \fP\fP
inquire length of side set element list 
.TP
\fB\fIEX_INQ_QA \fP\fP
inquire number of QA records 
.TP
\fB\fIEX_INQ_INFO \fP\fP
inquire number of info records 
.TP
\fB\fIEX_INQ_TIME \fP\fP
inquire number of time steps in the database 
.TP
\fB\fIEX_INQ_EB_PROP \fP\fP
inquire number of element block properties 
.TP
\fB\fIEX_INQ_NS_PROP \fP\fP
inquire number of node set properties 
.TP
\fB\fIEX_INQ_SS_PROP \fP\fP
inquire number of side set properties 
.TP
\fB\fIEX_INQ_NS_DF_LEN \fP\fP
inquire length of node set distribution factor list 
.TP
\fB\fIEX_INQ_SS_DF_LEN \fP\fP
inquire length of side set distribution factor list 
.TP
\fB\fIEX_INQ_LIB_VERS \fP\fP
inquire API Lib vers number 
.TP
\fB\fIEX_INQ_EM_PROP \fP\fP
inquire number of element map properties 
.TP
\fB\fIEX_INQ_NM_PROP \fP\fP
inquire number of node map properties 
.TP
\fB\fIEX_INQ_ELEM_MAP \fP\fP
inquire number of element maps 
.TP
\fB\fIEX_INQ_NODE_MAP \fP\fP
inquire number of node maps 
.TP
\fB\fIEX_INQ_EDGE \fP\fP
inquire number of edges 
.TP
\fB\fIEX_INQ_EDGE_BLK \fP\fP
inquire number of edge blocks 
.TP
\fB\fIEX_INQ_EDGE_SETS \fP\fP
inquire number of edge sets 
.TP
\fB\fIEX_INQ_ES_LEN \fP\fP
inquire length of concat edge set edge list 
.TP
\fB\fIEX_INQ_ES_DF_LEN \fP\fP
inquire length of concat edge set dist factor list 
.TP
\fB\fIEX_INQ_EDGE_PROP \fP\fP
inquire number of properties stored per edge block 
.TP
\fB\fIEX_INQ_ES_PROP \fP\fP
inquire number of properties stored per edge set 
.TP
\fB\fIEX_INQ_FACE \fP\fP
inquire number of faces 
.TP
\fB\fIEX_INQ_FACE_BLK \fP\fP
inquire number of face blocks 
.TP
\fB\fIEX_INQ_FACE_SETS \fP\fP
inquire number of face sets 
.TP
\fB\fIEX_INQ_FS_LEN \fP\fP
inquire length of concat face set face list 
.TP
\fB\fIEX_INQ_FS_DF_LEN \fP\fP
inquire length of concat face set dist factor list 
.TP
\fB\fIEX_INQ_FACE_PROP \fP\fP
inquire number of properties stored per face block 
.TP
\fB\fIEX_INQ_FS_PROP \fP\fP
inquire number of properties stored per face set 
.TP
\fB\fIEX_INQ_ELEM_SETS \fP\fP
inquire number of element sets 
.TP
\fB\fIEX_INQ_ELS_LEN \fP\fP
inquire length of concat element set element list 
.TP
\fB\fIEX_INQ_ELS_DF_LEN \fP\fP
inquire length of concat element set dist factor list 
.TP
\fB\fIEX_INQ_ELS_PROP \fP\fP
inquire number of properties stored per elem set 
.TP
\fB\fIEX_INQ_EDGE_MAP \fP\fP
inquire number of edge maps 
.TP
\fB\fIEX_INQ_FACE_MAP \fP\fP
inquire number of face maps 
.TP
\fB\fIEX_INQ_COORD_FRAMES \fP\fP
inquire number of coordinate frames 
.TP
\fB\fIEX_INQ_DB_MAX_ALLOWED_NAME_LENGTH \fP\fP
inquire size of MAX_NAME_LENGTH dimension on database 
.TP
\fB\fIEX_INQ_DB_MAX_USED_NAME_LENGTH \fP\fP
inquire size of MAX_NAME_LENGTH dimension on database 
.TP
\fB\fIEX_INQ_MAX_READ_NAME_LENGTH \fP\fP
inquire client-specified max size of returned names 
.TP
\fB\fIEX_INQ_INVALID \fP\fP
.PP
Definition at line 118 of file exodusII\&.h\&.
.PP
.nf
118                   {
119     EX_INQ_FILE_TYPE       =  1,     
120     EX_INQ_API_VERS        =  2,     
121     EX_INQ_DB_VERS         =  3,     
122     EX_INQ_TITLE           =  4,     
123     EX_INQ_DIM             =  5,     
124     EX_INQ_NODES           =  6,     
125     EX_INQ_ELEM            =  7,     
126     EX_INQ_ELEM_BLK        =  8,     
127     EX_INQ_NODE_SETS       =  9,     
128     EX_INQ_NS_NODE_LEN     = 10,     
129     EX_INQ_SIDE_SETS       = 11,     
130     EX_INQ_SS_NODE_LEN     = 12,     
131     EX_INQ_SS_ELEM_LEN     = 13,     
132     EX_INQ_QA              = 14,     
133     EX_INQ_INFO            = 15,     
134     EX_INQ_TIME            = 16,     
135     EX_INQ_EB_PROP         = 17,     
136     EX_INQ_NS_PROP         = 18,     
137     EX_INQ_SS_PROP         = 19,     
138     EX_INQ_NS_DF_LEN       = 20,     
139     EX_INQ_SS_DF_LEN       = 21,     
140     EX_INQ_LIB_VERS        = 22,     
141     EX_INQ_EM_PROP         = 23,     
142     EX_INQ_NM_PROP         = 24,     
143     EX_INQ_ELEM_MAP        = 25,     
144     EX_INQ_NODE_MAP        = 26,     
145     EX_INQ_EDGE            = 27,     
146     EX_INQ_EDGE_BLK        = 28,     
147     EX_INQ_EDGE_SETS       = 29,     
148     EX_INQ_ES_LEN          = 30,     
149     EX_INQ_ES_DF_LEN       = 31,     
150     EX_INQ_EDGE_PROP       = 32,     
151     EX_INQ_ES_PROP         = 33,     
152     EX_INQ_FACE            = 34,     
153     EX_INQ_FACE_BLK        = 35,     
154     EX_INQ_FACE_SETS       = 36,     
155     EX_INQ_FS_LEN          = 37,     
156     EX_INQ_FS_DF_LEN       = 38,     
157     EX_INQ_FACE_PROP       = 39,     
158     EX_INQ_FS_PROP         = 40,     
159     EX_INQ_ELEM_SETS       = 41,     
160     EX_INQ_ELS_LEN         = 42,     
161     EX_INQ_ELS_DF_LEN      = 43,     
162     EX_INQ_ELS_PROP        = 44,     
163     EX_INQ_EDGE_MAP        = 45,     
164     EX_INQ_FACE_MAP        = 46,     
165     EX_INQ_COORD_FRAMES    = 47,     
166     EX_INQ_DB_MAX_ALLOWED_NAME_LENGTH  = 48,     
167     EX_INQ_DB_MAX_USED_NAME_LENGTH  = 49,     
168     EX_INQ_MAX_READ_NAME_LENGTH = 50,     
169     EX_INQ_INVALID         = -1};
.fi
.SS "enum \fBex_options\fP"
\fBex_opts()\fP function codes - codes are OR'ed into exopts 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIEX_DEFAULT \fP\fP
.TP
\fB\fIEX_VERBOSE \fP\fP
verbose mode message flag 
.TP
\fB\fIEX_DEBUG \fP\fP
debug mode def 
.TP
\fB\fIEX_ABORT \fP\fP
abort mode flag def 
.PP
Definition at line 217 of file exodusII\&.h\&.
.PP
.nf
217                   {
218     EX_DEFAULT  = 0,
219     EX_VERBOSE  = 1,  
220     EX_DEBUG    = 2,  
221     EX_ABORT    = 4   
222   };
.fi
.SH "Function Documentation"
.PP 
.SS "EXODUS_EXPORT int ex_close (intexoid)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::close()\&.
.SS "EXODUS_EXPORT int ex_copy (intin_exoid, intout_exoid)"

.SS "EXODUS_EXPORT int ex_create_int (const char *path, intcmode, int *comp_ws, int *io_ws, intmy_version)"

.SS "EXODUS_EXPORT int ex_cvt_nodes_to_sides (intexoid, \fBvoid_int\fP *num_elem_per_set, \fBvoid_int\fP *num_nodes_per_set, \fBvoid_int\fP *side_sets_elem_index, \fBvoid_int\fP *side_sets_node_index, \fBvoid_int\fP *side_sets_elem_list, \fBvoid_int\fP *side_sets_node_list, \fBvoid_int\fP *side_sets_side_list)"

.SS "EXODUS_EXPORT void ex_err (const char *module_name, const char *message, interr_num)"

.SS "EXODUS_EXPORT int ex_get_all_times (intexoid, void *time_values)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_time_steps()\&.
.SS "EXODUS_EXPORT int ex_get_attr (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, void *attrib)"

.SS "EXODUS_EXPORT int ex_get_attr_names (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, char **names)"

.SS "EXODUS_EXPORT int ex_get_attr_param (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, int *num_attrs)"

.SS "EXODUS_EXPORT int ex_get_block (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, char *elem_type, \fBvoid_int\fP *num_entries_this_blk, \fBvoid_int\fP *num_nodes_per_entry, \fBvoid_int\fP *num_edges_per_entry, \fBvoid_int\fP *num_faces_per_entry, \fBvoid_int\fP *num_attr_per_entry)"

.PP
\fBDeprecated\fP
.RS 4
Use \fBex_get_block_param()\fP 
.RE
.PP

.SS "EXODUS_EXPORT int ex_get_block_param (intexoid, \fBex_block\fP *block)"

.SS "EXODUS_EXPORT int ex_get_cmap_params (intexoid, \fBvoid_int\fP *node_cmap_ids, \fBvoid_int\fP *node_cmap_node_cnts, \fBvoid_int\fP *elem_cmap_ids, \fBvoid_int\fP *elem_cmap_elem_cnts, intprocessor)"

.SS "EXODUS_EXPORT int ex_get_concat_node_sets (intexoid, \fBvoid_int\fP *node_set_ids, \fBvoid_int\fP *num_nodes_per_set, \fBvoid_int\fP *num_df_per_set, \fBvoid_int\fP *node_sets_node_index, \fBvoid_int\fP *node_sets_df_index, \fBvoid_int\fP *node_sets_node_list, void *node_sets_dist_fact)"

.SS "EXODUS_EXPORT int ex_get_concat_sets (intexoid, \fBex_entity_type\fPset_type, struct \fBex_set_specs\fP *set_specs)"

.SS "EXODUS_EXPORT int ex_get_concat_side_set_node_count (intexoid, int *side_set_node_cnt_list)"

.SS "EXODUS_EXPORT int ex_get_concat_side_sets (intexoid, \fBvoid_int\fP *side_set_ids, \fBvoid_int\fP *num_elem_per_set, \fBvoid_int\fP *num_dist_per_set, \fBvoid_int\fP *side_sets_elem_index, \fBvoid_int\fP *side_sets_dist_index, \fBvoid_int\fP *side_sets_elem_list, \fBvoid_int\fP *side_sets_side_list, void *side_sets_dist_fact)"

.SS "EXODUS_EXPORT int ex_get_conn (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, \fBvoid_int\fP *nodeconn, \fBvoid_int\fP *edgeconn, \fBvoid_int\fP *faceconn)"

.SS "EXODUS_EXPORT int ex_get_coord (intexoid, void *x_coor, void *y_coor, void *z_coor)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_nodes()\&.
.SS "EXODUS_EXPORT int ex_get_coord_names (intexoid, char **coord_names)"

.SS "EXODUS_EXPORT int ex_get_coordinate_frames (intexoid, int *nframes, \fBvoid_int\fP *cf_ids, void *pt_coordinates, char *tags)"

.SS "EXODUS_EXPORT int ex_get_eb_info_global (intexoid, \fBvoid_int\fP *el_blk_ids, \fBvoid_int\fP *el_blk_cnts)"

.SS "EXODUS_EXPORT int ex_get_elem_attr (intexoid, \fBex_entity_id\fPelem_blk_id, void *attrib)"

.SS "EXODUS_EXPORT int ex_get_elem_attr_names (intexoid, \fBex_entity_id\fPelem_blk_id, char **names)"

.SS "EXODUS_EXPORT int ex_get_elem_blk_ids (intexoid, \fBvoid_int\fP *ids)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_block_info()\&.
.SS "EXODUS_EXPORT int ex_get_elem_block (intexoid, \fBex_entity_id\fPelem_blk_id, char *elem_type, \fBvoid_int\fP *num_elem_this_blk, \fBvoid_int\fP *num_nodes_per_elem, \fBvoid_int\fP *num_attr)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_elem_in_block(), and libMesh::ExodusII_IO_Helper::read_elemental_var_values()\&.
.SS "EXODUS_EXPORT int ex_get_elem_cmap (intexoid, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *elem_ids, \fBvoid_int\fP *side_ids, \fBvoid_int\fP *proc_ids, intprocessor)"

.SS "EXODUS_EXPORT int ex_get_elem_conn (intexoid, \fBex_entity_id\fPelem_blk_id, \fBvoid_int\fP *connect)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_elem_in_block()\&.
.SS "EXODUS_EXPORT int ex_get_elem_map (intexoid, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_get_elem_num_map (intexoid, \fBvoid_int\fP *elem_map)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_elem_num_map()\&.
.SS "EXODUS_EXPORT int ex_get_elem_type (intexoid, \fBex_entity_id\fPelem_blk_id, char *elem_type)"

.SS "EXODUS_EXPORT int ex_get_elem_var (intexoid, inttime_step, intelem_var_index, \fBex_entity_id\fPelem_blk_id, int64_tnum_elem_this_blk, void *elem_var_vals)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_elemental_var_values()\&.
.SS "EXODUS_EXPORT int ex_get_elem_var_tab (intexoid, intnum_elem_blk, intnum_elem_var, int *elem_var_tab)"

.SS "EXODUS_EXPORT int ex_get_elem_var_time (intexoid, intelem_var_index, int64_telem_number, intbeg_time_step, intend_time_step, void *elem_var_vals)"

.SS "EXODUS_EXPORT int ex_get_entity_count_per_polyhedra (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, int *entity_counts)"

.SS "EXODUS_EXPORT void ex_get_err (const char **msg, const char **func, int *errcode)"

.SS "EXODUS_EXPORT int ex_get_glob_var_time (intexoid, intglob_var_index, intbeg_time_step, intend_time_step, void *glob_var_vals)"

.SS "EXODUS_EXPORT int ex_get_glob_vars (intexoid, inttime_step, intnum_glob_vars, void *glob_var_vals)"

.SS "EXODUS_EXPORT int ex_get_id_map (intexoid, \fBex_entity_type\fPobj_type, \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_get_ids (intexoid, \fBex_entity_type\fPobj_type, \fBvoid_int\fP *ids)"

.SS "int ex_get_idx (intneid, const char *ne_var_name, int64_t *index, intpos)"

.SS "EXODUS_EXPORT int ex_get_info (intexoid, char **info)"

.SS "EXODUS_EXPORT int ex_get_init (intexoid, char *title, \fBvoid_int\fP *num_dim, \fBvoid_int\fP *num_nodes, \fBvoid_int\fP *num_elem, \fBvoid_int\fP *num_elem_blk, \fBvoid_int\fP *num_node_sets, \fBvoid_int\fP *num_side_sets)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_header()\&.
.SS "EXODUS_EXPORT int ex_get_init_ext (intexoid, \fBex_init_params\fP *param)"

.SS "EXODUS_EXPORT int ex_get_init_global (intexoid, \fBvoid_int\fP *num_nodes_g, \fBvoid_int\fP *num_elems_g, \fBvoid_int\fP *num_elem_blks_g, \fBvoid_int\fP *num_node_sets_g, \fBvoid_int\fP *num_side_sets_g)"

.SS "EXODUS_EXPORT int ex_get_init_info (intexoid, int *num_proc, int *num_proc_in_f, char *ftype)"

.SS "EXODUS_EXPORT int ex_get_loadbal_param (intexoid, \fBvoid_int\fP *num_int_nodes, \fBvoid_int\fP *num_bor_nodes, \fBvoid_int\fP *num_ext_nodes, \fBvoid_int\fP *num_int_elems, \fBvoid_int\fP *num_bor_elems, \fBvoid_int\fP *num_node_cmaps, \fBvoid_int\fP *num_elem_cmaps, intprocessor)"

.SS "EXODUS_EXPORT int ex_get_map (intexoid, \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_get_map_param (intexoid, int *num_node_maps, int *num_elem_maps)"

.SS "EXODUS_EXPORT int ex_get_n_conn (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, int64_tstart_num, int64_tnum_ent, \fBvoid_int\fP *nodeconn, \fBvoid_int\fP *edgeconn, \fBvoid_int\fP *faceconn)"

.SS "EXODUS_EXPORT int ex_get_n_coord (intexoid, int64_tstart_node_num, int64_tnum_nodes, void *x_coor, void *y_coor, void *z_coor)"

.SS "EXODUS_EXPORT int ex_get_n_elem_attr (intexoid, \fBex_entity_id\fPelem_blk_id, int64_tstart_elem_num, int64_tnum_elems, void *attrib)"

.SS "EXODUS_EXPORT int ex_get_n_elem_conn (intexoid, \fBex_entity_id\fPelem_blk_id, int64_tstart_elem_num, int64_tnum_elems, \fBvoid_int\fP *connect)"

.SS "EXODUS_EXPORT int ex_get_n_elem_num_map (intexoid, int64_tstart_ent, int64_tnum_ents, \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_get_n_elem_var (intexoid, inttime_step, intelem_var_index, \fBex_entity_id\fPelem_blk_id, int64_tnum_elem_this_blk, int64_tstart_elem_num, int64_tnum_elem, void *elem_var_vals)"

.SS "EXODUS_EXPORT int ex_get_n_nodal_var (intexoid, inttime_step, intnodal_var_index, int64_tstart_node, int64_tnum_nodes, void *nodal_var_vals)"

.SS "EXODUS_EXPORT int ex_get_n_node_num_map (intexoid, int64_tstart_ent, int64_tnum_ents, \fBvoid_int\fP *node_map)"

.SS "EXODUS_EXPORT int ex_get_n_node_set (intexoid, \fBex_entity_id\fPnode_set_id, int64_tstart_node_num, int64_tnum_node, \fBvoid_int\fP *node_set_node_list)"

.SS "EXODUS_EXPORT int ex_get_n_node_set_df (intexoid, \fBex_entity_id\fPnode_set_id, int64_tstart_num, int64_tnum_df_to_get, void *node_set_df)"

.SS "EXODUS_EXPORT int ex_get_n_one_attr (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, int64_tstart_num, int64_tnum_ent, intattrib_index, void *attrib)"

.SS "EXODUS_EXPORT int ex_get_n_side_set (intexoid, \fBex_entity_id\fPside_set_id, int64_tstart_side_num, int64_tnum_sides, \fBvoid_int\fP *side_set_elem_list, \fBvoid_int\fP *side_set_side_list)"

.SS "EXODUS_EXPORT int ex_get_n_side_set_df (intexoid, \fBex_entity_id\fPside_set_id, int64_tstart_num, int64_tnum_df_to_get, void *side_set_df)"

.SS "EXODUS_EXPORT int ex_get_n_var (intexoid, inttime_step, \fBex_entity_type\fPvar_type, intvar_index, \fBex_entity_id\fPobj_id, int64_tstart_index, int64_tnum_entities, void *var_vals)"

.SS "EXODUS_EXPORT int ex_get_name (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPentity_id, char *name)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_block_info(), libMesh::ExodusII_IO_Helper::read_nodeset_info(), and libMesh::ExodusII_IO_Helper::read_sideset_info()\&.
.SS "EXODUS_EXPORT int ex_get_names (intexoid, \fBex_entity_type\fPobj_type, char **names)"

.SS "EXODUS_EXPORT int ex_get_nodal_var (intexoid, inttime_step, intnodal_var_index, int64_tnum_nodes, void *nodal_var_vals)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_nodal_var_values()\&.
.SS "EXODUS_EXPORT int ex_get_nodal_var_time (intexoid, intnodal_var_index, int64_tnode_number, intbeg_time_step, intend_time_step, void *nodal_var_vals)"

.SS "EXODUS_EXPORT int ex_get_node_cmap (intexoid, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *node_ids, \fBvoid_int\fP *proc_ids, intprocessor)"

.SS "EXODUS_EXPORT int ex_get_node_map (intexoid, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *node_map)"

.SS "EXODUS_EXPORT int ex_get_node_num_map (intexoid, \fBvoid_int\fP *node_map)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_node_num_map()\&.
.SS "EXODUS_EXPORT int ex_get_node_set (intexoid, \fBex_entity_id\fPnode_set_id, \fBvoid_int\fP *node_set_node_list)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_nodeset()\&.
.SS "EXODUS_EXPORT int ex_get_node_set_dist_fact (intexoid, \fBex_entity_id\fPnode_set_id, void *node_set_dist_fact)"

.SS "EXODUS_EXPORT int ex_get_node_set_ids (intexoid, \fBvoid_int\fP *ids)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_nodeset_info()\&.
.SS "EXODUS_EXPORT int ex_get_node_set_param (intexoid, \fBex_entity_id\fPnode_set_id, \fBvoid_int\fP *num_nodes_in_set, \fBvoid_int\fP *num_df_in_set)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_nodeset()\&.
.SS "EXODUS_EXPORT int ex_get_ns_param_global (intexoid, \fBvoid_int\fP *ns_ids_glob, \fBvoid_int\fP *ns_n_cnt_glob, \fBvoid_int\fP *ns_df_cnt_glob)"

.SS "EXODUS_EXPORT int ex_get_nset_var (intexoid, inttime_step, intnset_var_index, \fBex_entity_id\fPnset_id, int64_tnum_node_this_nset, void *nset_var_vals)"

.SS "EXODUS_EXPORT int ex_get_nset_var_tab (intexoid, intnum_nodesets, intnum_nset_var, int *nset_var_tab)"

.SS "EXODUS_EXPORT int ex_get_num_map (intexoid, \fBex_entity_type\fPmap_type, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_get_num_props (intexoid, \fBex_entity_type\fPobj_type)"

.SS "EXODUS_EXPORT int ex_get_object_truth_vector (intexoid, \fBex_entity_type\fPvar_type, \fBex_entity_id\fPobject_id, intnum_var, int *var_vector)"

.SS "EXODUS_EXPORT int ex_get_one_attr (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, intattrib_index, void *attrib)"

.SS "EXODUS_EXPORT int ex_get_one_elem_attr (intexoid, \fBex_entity_id\fPelem_blk_id, intattrib_index, void *attrib)"

.SS "EXODUS_EXPORT int ex_get_partial_elem_map (intexoid, \fBex_entity_id\fPmap_id, int64_tent_start, int64_tent_count, \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_get_partial_num_map (intexoid, \fBex_entity_type\fPmap_type, \fBex_entity_id\fPmap_id, int64_tent_start, int64_tent_count, \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_get_processor_elem_maps (intexoid, \fBvoid_int\fP *elem_mapi, \fBvoid_int\fP *elem_mapb, intprocessor)"

.SS "EXODUS_EXPORT int ex_get_processor_node_maps (intexoid, \fBvoid_int\fP *node_mapi, \fBvoid_int\fP *node_mapb, \fBvoid_int\fP *node_mape, intprocessor)"

.SS "EXODUS_EXPORT int ex_get_prop (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, const char *prop_name, \fBvoid_int\fP *value)"

.SS "EXODUS_EXPORT int ex_get_prop_array (intexoid, \fBex_entity_type\fPobj_type, const char *prop_name, \fBvoid_int\fP *values)"

.SS "EXODUS_EXPORT int ex_get_prop_names (intexoid, \fBex_entity_type\fPobj_type, char **prop_names)"

.SS "EXODUS_EXPORT int ex_get_qa (intexoid, char *qa_record[][4])"

.SS "EXODUS_EXPORT int ex_get_set (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, \fBvoid_int\fP *set_entry_list, \fBvoid_int\fP *set_extra_list)"

.SS "EXODUS_EXPORT int ex_get_set_dist_fact (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, void *set_dist_fact)"

.SS "EXODUS_EXPORT int ex_get_set_param (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, \fBvoid_int\fP *num_entry_in_set, \fBvoid_int\fP *num_dist_fact_in_set)"

.SS "EXODUS_EXPORT int ex_get_sets (intexoid, size_tset_count, struct \fBex_set\fP *sets)"

.SS "EXODUS_EXPORT int ex_get_side_set (intexoid, \fBex_entity_id\fPside_set_id, \fBvoid_int\fP *side_set_elem_list, \fBvoid_int\fP *side_set_side_list)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_sideset()\&.
.SS "EXODUS_EXPORT int ex_get_side_set_dist_fact (intexoid, \fBex_entity_id\fPside_set_id, void *side_set_dist_fact)"

.SS "EXODUS_EXPORT int ex_get_side_set_ids (intexoid, \fBvoid_int\fP *ids)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_sideset_info()\&.
.SS "EXODUS_EXPORT int ex_get_side_set_node_count (intexoid, \fBex_entity_id\fPside_set_id, int *side_set_node_cnt_list)"

.SS "EXODUS_EXPORT int ex_get_side_set_node_list (intexoid, \fBex_entity_id\fPside_set_id, \fBvoid_int\fP *side_set_node_cnt_list, \fBvoid_int\fP *side_set_node_list)"

.SS "EXODUS_EXPORT int ex_get_side_set_node_list_len (intexoid, \fBex_entity_id\fPside_set_id, \fBvoid_int\fP *side_set_node_list_len)"

.SS "EXODUS_EXPORT int ex_get_side_set_param (intexoid, \fBex_entity_id\fPside_set_id, \fBvoid_int\fP *num_side_in_set, \fBvoid_int\fP *num_dist_fact_in_set)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_sideset()\&.
.SS "EXODUS_EXPORT int ex_get_ss_param_global (intexoid, \fBvoid_int\fP *ss_ids_glob, \fBvoid_int\fP *ss_s_cnt_glob, \fBvoid_int\fP *ss_df_cnt_glob)"

.SS "EXODUS_EXPORT int ex_get_sset_var (intexoid, inttime_step, intsset_var_index, \fBex_entity_id\fPsset_id, int64_tnum_side_this_sset, void *sset_var_vals)"

.SS "EXODUS_EXPORT int ex_get_sset_var_tab (intexoid, intnum_sidesets, intnum_sset_var, int *sset_var_tab)"

.SS "EXODUS_EXPORT int ex_get_time (intexoid, inttime_step, void *time_value)"

.SS "EXODUS_EXPORT int ex_get_truth_table (intexoid, \fBex_entity_type\fPobj_type, intnum_blk, intnum_var, int *var_tab)"

.SS "EXODUS_EXPORT int ex_get_var (intexoid, inttime_step, \fBex_entity_type\fPvar_type, intvar_index, \fBex_entity_id\fPobj_id, int64_tnum_entry_this_obj, void *var_vals)"

.SS "EXODUS_EXPORT int ex_get_var_name (intexoid, const char *var_type, intvar_num, char *var_name)"

.SS "EXODUS_EXPORT int ex_get_var_names (intexoid, const char *var_type, intnum_vars, char *var_names[])"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_var_names_impl()\&.
.SS "EXODUS_EXPORT int ex_get_var_param (intexoid, const char *var_type, int *num_vars)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::read_header(), and libMesh::ExodusII_IO_Helper::read_var_names_impl()\&.
.SS "EXODUS_EXPORT int ex_get_var_tab (intexoid, const char *var_type, intnum_blk, intnum_var, int *var_tab)"

.SS "EXODUS_EXPORT int ex_get_var_time (intexoid, \fBex_entity_type\fPvar_type, intvar_index, int64_tid, intbeg_time_step, intend_time_step, void *var_vals)"

.SS "EXODUS_EXPORT int ex_get_variable_name (intexoid, \fBex_entity_type\fPobj_type, intvar_num, char *var_name)"

.SS "EXODUS_EXPORT int ex_get_variable_names (intexoid, \fBex_entity_type\fPobj_type, intnum_vars, char *var_names[])"

.SS "EXODUS_EXPORT int ex_get_variable_param (intexoid, \fBex_entity_type\fPobj_type, int *num_vars)"

.SS "EXODUS_EXPORT size_t ex_header_size (intexoid)"

.SS "EXODUS_EXPORT int ex_inquire (intexoid, intinquiry, \fBvoid_int\fP *, float *, char *)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::inquire()\&.
.SS "EXODUS_EXPORT int64_t ex_inquire_int (intexoid, intinquiry)"

.SS "EXODUS_EXPORT int ex_int64_status (intexoid)"

.SS "EXODUS_EXPORT int ex_large_model (intexoid)"

.SS "char* ex_name_of_object (\fBex_entity_type\fPobj_type)"

.SS "EXODUS_EXPORT int ex_open_int (const char *path, intmode, int *comp_ws, int *io_ws, float *version, intmy_version)"

.SS "EXODUS_EXPORT void ex_opts (intoptions)"

.SS "EXODUS_EXPORT int ex_put_all_var_param (intexoid, intnum_g, intnum_n, intnum_e, int *elem_var_tab, intnum_m, int *nset_var_tab, intnum_s, int *sset_var_tab)"

.SS "EXODUS_EXPORT int ex_put_all_var_param_ext (intexoid, const \fBex_var_params\fP *vp)"

.SS "EXODUS_EXPORT int ex_put_attr (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, const void *attrib)"

.SS "EXODUS_EXPORT int ex_put_attr_names (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, char **names)"

.SS "EXODUS_EXPORT int ex_put_attr_param (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, intnum_attrs)"

.SS "EXODUS_EXPORT int ex_put_block (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, const char *entry_descrip, int64_tnum_entries_this_blk, int64_tnum_nodes_per_entry, int64_tnum_edges_per_entry, int64_tnum_faces_per_entry, int64_tnum_attr_per_entry)"

.SS "EXODUS_EXPORT int ex_put_block_param (intexoid, const \fBex_block\fPblock)"

.SS "EXODUS_EXPORT int ex_put_cmap_params (intexoid, \fBvoid_int\fP *node_map_ids, \fBvoid_int\fP *node_map_node_cnts, \fBvoid_int\fP *elem_map_ids, \fBvoid_int\fP *elem_map_elem_cnts, int64_tprocessor)"

.SS "EXODUS_EXPORT int ex_put_cmap_params_cc (intexoid, \fBvoid_int\fP *node_map_ids, \fBvoid_int\fP *node_map_node_cnts, \fBvoid_int\fP *node_proc_ptrs, \fBvoid_int\fP *elem_map_ids, \fBvoid_int\fP *elem_map_elem_cnts, \fBvoid_int\fP *elem_proc_ptrs)"

.SS "EXODUS_EXPORT int ex_put_concat_all_blocks (intexoid, const \fBex_block_params\fP *param)"

.SS "EXODUS_EXPORT int ex_put_concat_elem_block (intexoid, const \fBvoid_int\fP *elem_blk_id, char *elem_type[], const \fBvoid_int\fP *num_elem_this_blk, const \fBvoid_int\fP *num_nodes_per_elem, const \fBvoid_int\fP *num_attr, intdefine_maps)"

.SS "EXODUS_EXPORT int ex_put_concat_node_sets (intexoid, \fBvoid_int\fP *node_set_ids, \fBvoid_int\fP *num_nodes_per_set, \fBvoid_int\fP *num_dist_per_set, \fBvoid_int\fP *node_sets_node_index, \fBvoid_int\fP *node_sets_df_index, \fBvoid_int\fP *node_sets_node_list, void *node_sets_dist_fact)"

.SS "EXODUS_EXPORT int ex_put_concat_sets (intexoid, \fBex_entity_type\fPset_type, const struct \fBex_set_specs\fP *set_specs)"

.SS "EXODUS_EXPORT int ex_put_concat_side_sets (intexoid, \fBvoid_int\fP *side_set_ids, \fBvoid_int\fP *num_elem_per_set, \fBvoid_int\fP *num_dist_per_set, \fBvoid_int\fP *side_sets_elem_index, \fBvoid_int\fP *side_sets_dist_index, \fBvoid_int\fP *side_sets_elem_list, \fBvoid_int\fP *side_sets_side_list, void *side_sets_dist_fact)"

.SS "EXODUS_EXPORT int ex_put_concat_var_param (intexoid, intnum_g, intnum_n, intnum_e, intnum_elem_blk, int *elem_var_tab)"

.SS "EXODUS_EXPORT int ex_put_conn (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, const \fBvoid_int\fP *node_conn, const \fBvoid_int\fP *elem_edge_conn, const \fBvoid_int\fP *elem_face_conn)"

.SS "EXODUS_EXPORT int ex_put_coord (intexoid, const void *x_coor, const void *y_coor, const void *z_coor)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_nodal_coordinates(), and libMesh::Nemesis_IO_Helper::write_nodal_coordinates()\&.
.SS "EXODUS_EXPORT int ex_put_coord_names (intexoid, char *coord_names[])"

.SS "EXODUS_EXPORT int ex_put_coordinate_frames (intexoid, intnframes, const \fBvoid_int\fP *cf_ids, void *pt_coordinates, const char *tags)"

.SS "EXODUS_EXPORT int ex_put_eb_info_global (intexoid, \fBvoid_int\fP *el_blk_ids, \fBvoid_int\fP *el_blk_cnts)"

.SS "EXODUS_EXPORT int ex_put_elem_attr (intexoid, \fBex_entity_id\fPelem_blk_id, const void *attrib)"

.SS "EXODUS_EXPORT int ex_put_elem_attr_names (intexoid, \fBex_entity_id\fPelem_blk_id, char *names[])"

.SS "EXODUS_EXPORT int ex_put_elem_block (intexoid, \fBex_entity_id\fPelem_blk_id, const char *elem_type, int64_tnum_elem_this_blk, int64_tnum_nodes_per_elem, int64_tnum_attr)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_elements(), and libMesh::Nemesis_IO_Helper::write_elements()\&.
.SS "EXODUS_EXPORT int ex_put_elem_cmap (intexoid, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *elem_ids, \fBvoid_int\fP *side_ids, \fBvoid_int\fP *proc_ids, intprocessor)"

.SS "EXODUS_EXPORT int ex_put_elem_conn (intexoid, \fBex_entity_id\fPelem_blk_id, const \fBvoid_int\fP *connect)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_elements(), and libMesh::Nemesis_IO_Helper::write_elements()\&.
.SS "EXODUS_EXPORT int ex_put_elem_map (intexoid, \fBex_entity_id\fPmap_id, const \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_put_elem_num_map (intexoid, const \fBvoid_int\fP *elem_map)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_elements(), and libMesh::Nemesis_IO_Helper::write_elements()\&.
.SS "EXODUS_EXPORT int ex_put_elem_var (intexoid, inttime_step, intelem_var_index, \fBex_entity_id\fPelem_blk_id, int64_tnum_elem_this_blk, const void *elem_var_vals)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_element_values()\&.
.SS "EXODUS_EXPORT int ex_put_elem_var_slab (intexoid, inttime_step, intelem_var_index, \fBex_entity_id\fPelem_blk_id, int64_tstart_pos, int64_tnum_vals, void *elem_var_vals)"

.SS "EXODUS_EXPORT int ex_put_elem_var_tab (intexoid, intnum_elem_blk, intnum_elem_var, int *elem_var_tab)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::initialize_element_variables()\&.
.SS "EXODUS_EXPORT int ex_put_entity_count_per_polyhedra (intexoid, \fBex_entity_type\fPblk_type, \fBex_entity_id\fPblk_id, const int *entity_counts)"

.SS "EXODUS_EXPORT int ex_put_glob_vars (intexoid, inttime_step, intnum_glob_vars, const void *glob_var_vals)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_global_values()\&.
.SS "EXODUS_EXPORT int ex_put_id_map (intexoid, \fBex_entity_type\fPobj_type, const \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_put_info (intexoid, intnum_info, char *info[])"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_information_records()\&.
.SS "EXODUS_EXPORT int ex_put_init (intexoid, const char *title, int64_tnum_dim, int64_tnum_nodes, int64_tnum_elem, int64_tnum_elem_blk, int64_tnum_node_sets, int64_tnum_side_sets)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::initialize(), and libMesh::Nemesis_IO_Helper::write_exodus_initialization_info()\&.
.SS "EXODUS_EXPORT int ex_put_init_ext (intexoid, const \fBex_init_params\fP *param)"

.SS "EXODUS_EXPORT int ex_put_init_global (intexoid, int64_tnum_nodes_g, int64_tnum_elems_g, int64_tnum_elem_blks_g, int64_tnum_node_sets_g, int64_tnum_side_sets_g)"

.SS "EXODUS_EXPORT int ex_put_init_info (intexoid, intnum_proc, intnum_proc_in_f, char *ftype)"

.SS "EXODUS_EXPORT int ex_put_loadbal_param (intexoid, int64_tnum_int_nodes, int64_tnum_bor_nodes, int64_tnum_ext_nodes, int64_tnum_int_elems, int64_tnum_bor_elems, int64_tnum_node_cmaps, int64_tnum_elem_cmaps, intprocessor)"

.SS "EXODUS_EXPORT int ex_put_loadbal_param_cc (intexoid, \fBvoid_int\fP *num_int_nodes, \fBvoid_int\fP *num_bor_nodes, \fBvoid_int\fP *num_ext_nodes, \fBvoid_int\fP *num_int_elems, \fBvoid_int\fP *num_bor_elems, \fBvoid_int\fP *num_node_cmaps, \fBvoid_int\fP *num_elem_cmaps)"

.SS "EXODUS_EXPORT int ex_put_map (intexoid, const \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_put_map_param (intexoid, intnum_node_maps, intnum_elem_maps)"

.SS "EXODUS_EXPORT int ex_put_n_coord (intexoid, int64_tstart_node_num, int64_tnum_nodes, const void *x_coor, const void *y_coor, const void *z_coor)"

.SS "EXODUS_EXPORT int ex_put_n_elem_attr (intexoid, \fBex_entity_id\fPelem_blk_id, int64_tstart_elem_num, int64_tnum_elems, void *attrib)"

.SS "EXODUS_EXPORT int ex_put_n_elem_conn (intexoid, \fBex_entity_id\fPelem_blk_id, int64_tstart_elem_num, int64_tnum_elems, const \fBvoid_int\fP *connect)"

.SS "EXODUS_EXPORT int ex_put_n_elem_num_map (intexoid, int64_tstart_ent, int64_tnum_ents, const \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_put_n_nodal_var (intexoid, inttime_step, intnodal_var_index, int64_tstart_node, int64_tnum_nodes, const void *nodal_var_vals)"

.SS "EXODUS_EXPORT int ex_put_n_node_num_map (intexoid, int64_tstart_ent, int64_tnum_ents, const \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_put_n_node_set (intexoid, \fBex_entity_id\fPnode_set_id, int64_tstart_node_num, int64_tnum_node, const \fBvoid_int\fP *node_set_node_list)"

.SS "EXODUS_EXPORT int ex_put_n_node_set_df (intexoid, \fBex_entity_id\fPnode_set_id, int64_tstart_num, int64_tnum_df_to_get, void *node_set_df)"

.SS "EXODUS_EXPORT int ex_put_n_one_attr (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, int64_tstart_num, int64_tnum_ent, intattrib_index, const void *attrib)"

.SS "EXODUS_EXPORT int ex_put_n_side_set (intexoid, \fBex_entity_id\fPside_set_id, int64_tstart_side_num, int64_tnum_sides, const \fBvoid_int\fP *side_set_elem_list, const \fBvoid_int\fP *side_set_side_list)"

.SS "EXODUS_EXPORT int ex_put_n_side_set_df (intexoid, \fBex_entity_id\fPside_set_id, int64_tstart_num, int64_tnum_df_to_get, void *side_set_df)"

.SS "EXODUS_EXPORT int ex_put_n_var (intexoid, inttime_step, \fBex_entity_type\fPvar_type, intvar_index, \fBex_entity_id\fPobj_id, int64_tstart_index, int64_tnum_entities, const void *var_vals)"

.SS "EXODUS_EXPORT int ex_put_name (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPentity_id, const char *name)"

.SS "EXODUS_EXPORT int ex_put_names (intexoid, \fBex_entity_type\fPobj_type, char *names[])"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_elements(), libMesh::ExodusII_IO_Helper::write_nodesets(), and libMesh::ExodusII_IO_Helper::write_sidesets()\&.
.SS "EXODUS_EXPORT int ex_put_nodal_var (intexoid, inttime_step, intnodal_var_index, int64_tnum_nodes, const void *nodal_var_vals)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_nodal_values()\&.
.SS "EXODUS_EXPORT int ex_put_nodal_var_slab (intexoid, inttime_step, intnodal_var_index, int64_tstart_pos, int64_tnum_vals, void *nodal_var_vals)"

.SS "EXODUS_EXPORT int ex_put_node_cmap (intexoid, \fBex_entity_id\fPmap_id, \fBvoid_int\fP *node_ids, \fBvoid_int\fP *proc_ids, intprocessor)"

.SS "EXODUS_EXPORT int ex_put_node_map (intexoid, \fBex_entity_id\fPmap_id, const \fBvoid_int\fP *node_map)"

.SS "EXODUS_EXPORT int ex_put_node_num_map (intexoid, const \fBvoid_int\fP *node_map)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_nodal_coordinates(), and libMesh::Nemesis_IO_Helper::write_nodal_coordinates()\&.
.SS "EXODUS_EXPORT int ex_put_node_set (intexoid, \fBex_entity_id\fPnode_set_id, const \fBvoid_int\fP *node_set_node_list)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_nodesets(), and libMesh::Nemesis_IO_Helper::write_nodesets()\&.
.SS "EXODUS_EXPORT int ex_put_node_set_dist_fact (intexoid, \fBex_entity_id\fPnode_set_id, const void *node_set_dist_fact)"

.SS "EXODUS_EXPORT int ex_put_node_set_param (intexoid, \fBex_entity_id\fPnode_set_id, int64_tnum_nodes_in_set, int64_tnum_dist_in_set)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_nodesets(), and libMesh::Nemesis_IO_Helper::write_nodesets()\&.
.SS "EXODUS_EXPORT int ex_put_ns_param_global (intexoid, \fBvoid_int\fP *global_ids, \fBvoid_int\fP *global_n_cnts, \fBvoid_int\fP *global_df_cnts)"

.SS "EXODUS_EXPORT int ex_put_nset_var (intexoid, inttime_step, intnset_var_index, \fBex_entity_id\fPnset_id, int64_tnum_nodes_this_nset, const void *nset_var_vals)"

.SS "EXODUS_EXPORT int ex_put_nset_var_tab (intexoid, intnum_nset, intnum_nset_var, int *nset_var_tab)"

.SS "EXODUS_EXPORT int ex_put_num_map (intexoid, \fBex_entity_type\fPmap_type, \fBex_entity_id\fPmap_id, const \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_put_one_attr (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, intattrib_index, const void *attrib)"

.SS "EXODUS_EXPORT int ex_put_one_elem_attr (intexoid, \fBex_entity_id\fPelem_blk_id, intattrib_index, const void *attrib)"

.SS "EXODUS_EXPORT int ex_put_partial_elem_map (intexoid, \fBex_entity_id\fPmap_id, int64_tent_start, int64_tent_count, const \fBvoid_int\fP *elem_map)"

.SS "EXODUS_EXPORT int ex_put_partial_id_map (intexoid, \fBex_entity_type\fPobj_type, int64_tstart_entity_num, int64_tnum_entities, const \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_put_partial_num_map (intexoid, \fBex_entity_type\fPmap_type, \fBex_entity_id\fPmap_id, int64_tent_start, int64_tent_count, const \fBvoid_int\fP *map)"

.SS "EXODUS_EXPORT int ex_put_partial_set_dist_fact (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, int64_toffset, int64_tnum_to_put, const void *set_dist_fact)"

.SS "EXODUS_EXPORT int ex_put_processor_elem_maps (intexoid, \fBvoid_int\fP *elem_mapi, \fBvoid_int\fP *elem_mapb, intprocessor)"

.SS "EXODUS_EXPORT int ex_put_processor_node_maps (intexoid, \fBvoid_int\fP *node_mapi, \fBvoid_int\fP *node_mapb, \fBvoid_int\fP *node_mape, intprocessor)"

.SS "EXODUS_EXPORT int ex_put_prop (intexoid, \fBex_entity_type\fPobj_type, \fBex_entity_id\fPobj_id, const char *prop_name, \fBex_entity_id\fPvalue)"

.SS "EXODUS_EXPORT int ex_put_prop_array (intexoid, \fBex_entity_type\fPobj_type, const char *prop_name, const \fBvoid_int\fP *values)"

.SS "EXODUS_EXPORT int ex_put_prop_names (intexoid, \fBex_entity_type\fPobj_type, intnum_props, char **prop_names)"

.SS "EXODUS_EXPORT int ex_put_qa (intexoid, intnum_qa_records, char *qa_record[][4])"

.SS "EXODUS_EXPORT int ex_put_set (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, const \fBvoid_int\fP *set_entry_list, const \fBvoid_int\fP *set_extra_list)"

.SS "EXODUS_EXPORT int ex_put_set_dist_fact (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, const void *set_dist_fact)"

.SS "EXODUS_EXPORT int ex_put_set_param (intexoid, \fBex_entity_type\fPset_type, \fBex_entity_id\fPset_id, int64_tnum_entries_in_set, int64_tnum_dist_fact_in_set)"

.SS "EXODUS_EXPORT int ex_put_sets (intexoid, size_tset_count, const struct \fBex_set\fP *sets)"

.SS "EXODUS_EXPORT int ex_put_side_set (intexoid, \fBex_entity_id\fPside_set_id, const \fBvoid_int\fP *side_set_elem_list, const \fBvoid_int\fP *side_set_side_list)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_sidesets(), and libMesh::Nemesis_IO_Helper::write_sidesets()\&.
.SS "EXODUS_EXPORT int ex_put_side_set_dist_fact (intexoid, \fBex_entity_id\fPside_set_id, const void *side_set_dist_fact)"

.SS "EXODUS_EXPORT int ex_put_side_set_param (intexoid, \fBex_entity_id\fPside_set_id, int64_tnum_side_in_set, int64_tnum_dist_fact_in_set)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_sidesets(), and libMesh::Nemesis_IO_Helper::write_sidesets()\&.
.SS "EXODUS_EXPORT int ex_put_ss_param_global (intexoid, \fBvoid_int\fP *global_ids, \fBvoid_int\fP *global_el_cnts, \fBvoid_int\fP *global_df_cnts)"

.SS "EXODUS_EXPORT int ex_put_sset_var (intexoid, inttime_step, intsset_var_index, \fBex_entity_id\fPsset_id, int64_tnum_faces_this_sset, const void *sset_var_vals)"

.SS "EXODUS_EXPORT int ex_put_sset_var_tab (intexoid, intnum_sset, intnum_sset_var, int *sset_var_tab)"

.SS "EXODUS_EXPORT int ex_put_time (intexoid, inttime_step, const void *time_value)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_timestep()\&.
.SS "EXODUS_EXPORT int ex_put_truth_table (intexoid, \fBex_entity_type\fPobj_type, intnum_blk, intnum_var, int *var_tab)"

.SS "EXODUS_EXPORT int ex_put_var (intexoid, inttime_step, \fBex_entity_type\fPvar_type, intvar_index, \fBex_entity_id\fPobj_id, int64_tnum_entries_this_obj, const void *var_vals)"

.SS "EXODUS_EXPORT int ex_put_var_name (intexoid, const char *var_type, intvar_num, const char *var_name)"

.SS "EXODUS_EXPORT int ex_put_var_names (intexoid, const char *var_type, intnum_vars, char *var_names[])"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_var_names_impl()\&.
.SS "EXODUS_EXPORT int ex_put_var_param (intexoid, const char *var_type, intnum_vars)"

.PP
Referenced by libMesh::ExodusII_IO_Helper::write_var_names_impl()\&.
.SS "EXODUS_EXPORT int ex_put_var_tab (intexoid, const char *var_type, intnum_blk, intnum_var, int *var_tab)"

.SS "EXODUS_EXPORT int ex_put_variable_name (intexoid, \fBex_entity_type\fPobj_type, intvar_num, const char *var_name)"

.SS "EXODUS_EXPORT int ex_put_variable_names (intexoid, \fBex_entity_type\fPobj_type, intnum_vars, char *var_names[])"

.SS "EXODUS_EXPORT int ex_put_variable_param (intexoid, \fBex_entity_type\fPobj_type, intnum_vars)"

.SS "EXODUS_EXPORT int ex_set_int64_status (intexoid, intmode)"

.SS "EXODUS_EXPORT int ex_set_max_name_length (intexoid, intlength)"
Note that the max name length setting is global at this time; not specific to a particular database; however, the exoid option is passed to give flexibility in the future to implement this on a database-by-database basis\&. 
.SS "EXODUS_EXPORT int ex_set_option (intexoid, \fBex_option_type\fPoption, intoption_value)"

.SS "EXODUS_EXPORT int ex_update (intexoid)"

.PP
Referenced by libMesh::Nemesis_IO::write(), libMesh::ExodusII_IO_Helper::write_element_values(), libMesh::ExodusII_IO_Helper::write_global_values(), libMesh::ExodusII_IO_Helper::write_information_records(), libMesh::ExodusII_IO_Helper::write_nodal_values(), libMesh::ExodusII_IO_Helper::write_timestep(), and libMesh::Nemesis_IO_Helper::~Nemesis_IO_Helper()\&.
.SS "\fBex_entity_type\fP ex_var_type_to_ex_entity_type (charvar_type)"

.SH "Variable Documentation"
.PP 
.SS "int exerrval"
shared error return value 
.SS "int exoptval"
error reporting flag (default is quiet) 
.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
