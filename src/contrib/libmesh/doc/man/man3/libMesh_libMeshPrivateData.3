.TH "libMesh::libMeshPrivateData" 3 "Tue May 6 2014" "libMesh" \" -*- nroff -*-
.ad l
.nh
.SH NAME
libMesh::libMeshPrivateData \- 
.SH SYNOPSIS
.br
.PP
.SS "Variables"

.in +1c
.ti -1c
.RI "bool \fB_is_initialized\fP = false"
.br
.ti -1c
.RI "\fBSolverPackage\fP \fB_solver_package\fP"
.br
.ti -1c
.RI "\fBprocessor_id_type\fP \fB_n_processors\fP = 1"
.br
.ti -1c
.RI "\fBprocessor_id_type\fP \fB_processor_id\fP = 0"
.br
.ti -1c
.RI "int \fB_n_threads\fP = 1"
.br
.in -1c
.SH "Detailed Description"
.PP 
Namespaces don't provide private data, so let's take the data we would like private and put it in an obnoxious namespace\&. At least that way it is a pain to use, thus discouraging errors\&. 
.SH "Variable Documentation"
.PP 
.SS "bool libMesh::libMeshPrivateData::_is_initialized = false"
Flag that tells if \fC\fBinit()\fP\fP has been called\&. 
.PP
Definition at line 230 of file libmesh\&.C\&.
.PP
Referenced by libMesh::LinearSolver< T >::attach_preconditioner(), libMesh::NonlinearSolver< T >::attach_preconditioner(), libMesh::EigenSparseLinearSolver< T >::clear(), libMesh::AztecLinearSolver< T >::clear(), libMesh::LaspackLinearSolver< T >::clear(), libMesh::SlepcEigenSolver< T >::clear(), libMesh::PetscNonlinearSolver< T >::clear(), libMesh::DistributedVector< T >::clear(), libMesh::LaspackVector< T >::clear(), libMesh::EigenSparseVector< T >::clear(), libMesh::PetscLinearSolver< T >::clear(), libMesh::EigenSparseMatrix< T >::clear(), libMesh::EpetraVector< T >::clear(), libMesh::PetscVector< T >::clear(), libMesh::LaspackMatrix< T >::clear(), libMesh::EpetraMatrix< T >::clear(), libMesh::NumericVector< T >::clear(), libMesh::PetscMatrix< T >::clear(), libMesh::closed(), libMesh::EigenSparseLinearSolver< T >::init(), libMesh::AztecLinearSolver< T >::init(), libMesh::LaspackLinearSolver< T >::init(), libMesh::SlepcEigenSolver< T >::init(), libMesh::PetscPreconditioner< T >::init(), libMesh::TrilinosPreconditioner< T >::init(), libMesh::PetscNonlinearSolver< T >::init(), libMesh::EigenSparseMatrix< T >::init(), libMesh::EpetraMatrix< T >::init(), libMesh::LaspackMatrix< T >::init(), libMesh::PetscLinearSolver< T >::init(), libMesh::PetscMatrix< T >::init(), libMesh::DistributedVector< T >::init(), libMesh::EpetraVector< T >::init(), libMesh::PetscVector< T >::init(), libMesh::initialized(), libMesh::DistributedVector< T >::operator=(), libMesh::Preconditioner< T >::set_matrix(), libMesh::Preconditioner< T >::set_type(), libMesh::Parallel::StandardType< Hilbert::HilbertIndices >::StandardType(), libMesh::Parallel::StandardType< TypeVector< T > >::StandardType(), libMesh::Parallel::StandardType< VectorValue< T > >::StandardType(), libMesh::Parallel::StandardType< Point >::StandardType(), libMesh::EigenSparseVector< T >::swap(), and libMesh::NumericVector< T >::swap()\&.
.SS "\fBprocessor_id_type\fP libMesh::libMeshPrivateData::_n_processors = 1"
Total number of processors used\&. 
.PP
Definition at line 226 of file libmesh\&.C\&.
.PP
Referenced by libMesh::global_n_processors(), and libMesh::if()\&.
.SS "int libMesh::libMeshPrivateData::_n_threads = 1"
Total number of threads possible\&. 
.PP
Definition at line 229 of file libmesh\&.C\&.
.PP
Referenced by libMesh::if()\&.
.SS "\fBprocessor_id_type\fP libMesh::libMeshPrivateData::_processor_id = 0"
The local processor id\&. 
.PP
Definition at line 227 of file libmesh\&.C\&.
.PP
Referenced by libMesh::global_processor_id(), and libMesh::if()\&.
.SS "\fBSolverPackage\fP libMesh::libMeshPrivateData::_solver_package"
\fBInitial value:\fP
.PP
.nf
=
#if   defined(LIBMESH_HAVE_PETSC)    
  PETSC_SOLVERS
.fi
The default solver package to use\&. 
.PP
Definition at line 231 of file libmesh\&.C\&.
.PP
Referenced by libMesh::default_solver_package()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for libMesh from the source code\&.
